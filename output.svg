<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="21385pt" height="3716pt"
 viewBox="0.00 0.00 21385.00 3716.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3712)">
<title>%3</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-3712 21381,-3712 21381,4 -4,4"/>
<!-- (below main) -->
<g id="node1" class="node"><title>(below main)</title>
<polygon fill="#f63c01" stroke="#f63c01" points="15919.5,-3399 15848.5,-3399 15848.5,-3336 15919.5,-3336 15919.5,-3399"/>
<text text-anchor="middle" x="15884" y="-3387" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="15884" y="-3376" font-family="Arial" font-size="10.00" fill="#ffffff">(below main)</text>
<text text-anchor="middle" x="15884" y="-3365" font-family="Arial" font-size="10.00" fill="#ffffff">93.97%</text>
<text text-anchor="middle" x="15884" y="-3354" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15884" y="-3343" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main -->
<g id="node2" class="node"><title>main</title>
<polygon fill="#f53f02" stroke="#f53f02" points="15909,-3296 15859,-3296 15859,-3233 15909,-3233 15909,-3296"/>
<text text-anchor="middle" x="15884" y="-3284" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15884" y="-3273" font-family="Arial" font-size="10.00" fill="#ffffff">main</text>
<text text-anchor="middle" x="15884" y="-3262" font-family="Arial" font-size="10.00" fill="#ffffff">93.65%</text>
<text text-anchor="middle" x="15884" y="-3251" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15884" y="-3240" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- (below main)&#45;&gt;main -->
<g id="edge1" class="edge"><title>(below main)&#45;&gt;main</title>
<path fill="none" stroke="#f53f02" stroke-width="3.75" d="M15884,-3335.92C15884,-3326.52 15884,-3316.01 15884,-3306.05"/>
<polygon fill="#f53f02" stroke="#f53f02" stroke-width="3.75" points="15887.4,-3306.02 15884,-3296.32 15880.6,-3306.02 15887.4,-3306.02"/>
<text text-anchor="middle" x="15901" y="-3319" font-family="Arial" font-size="10.00" fill="#f53f02">93.65%</text>
<text text-anchor="middle" x="15901" y="-3308" font-family="Arial" font-size="10.00" fill="#f53f02">1×</text>
</g>
<!-- TemperatureData::read() -->
<g id="node7" class="node"><title>TemperatureData::read()</title>
<polygon fill="#f44502" stroke="#f44502" points="15944.5,-3152 15823.5,-3152 15823.5,-3089 15944.5,-3089 15944.5,-3152"/>
<text text-anchor="middle" x="15884" y="-3140" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15884" y="-3129" font-family="Arial" font-size="10.00" fill="#ffffff">TemperatureData::read()</text>
<text text-anchor="middle" x="15884" y="-3118" font-family="Arial" font-size="10.00" fill="#ffffff">93.08%</text>
<text text-anchor="middle" x="15884" y="-3107" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="15884" y="-3096" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;TemperatureData::read() -->
<g id="edge68" class="edge"><title>main&#45;&gt;TemperatureData::read()</title>
<path fill="none" stroke="#f44502" stroke-width="3.72" d="M15884,-3232.69C15884,-3211.94 15884,-3184.37 15884,-3161.87"/>
<polygon fill="#f44502" stroke="#f44502" stroke-width="3.72" points="15887.4,-3161.85 15884,-3152.25 15880.6,-3161.85 15887.4,-3161.85"/>
<text text-anchor="middle" x="15901" y="-3195.5" font-family="Arial" font-size="10.00" fill="#f44502">93.08%</text>
<text text-anchor="middle" x="15901" y="-3184.5" font-family="Arial" font-size="10.00" fill="#f44502">1×</text>
</g>
<!-- 0x0000000000000cc0 -->
<g id="node3" class="node"><title>0x0000000000000cc0</title>
<polygon fill="#ff0000" stroke="#ff0000" points="16100.5,-3708 15989.5,-3708 15989.5,-3645 16100.5,-3645 16100.5,-3708"/>
<text text-anchor="middle" x="16045" y="-3696" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="16045" y="-3685" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000000000cc0</text>
<text text-anchor="middle" x="16045" y="-3674" font-family="Arial" font-size="10.00" fill="#ffffff">100.00%</text>
<text text-anchor="middle" x="16045" y="-3663" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="16045" y="-3652" font-family="Arial" font-size="10.00" fill="#ffffff">0×</text>
</g>
<!-- _dl_start -->
<g id="node4" class="node"><title>_dl_start</title>
<polygon fill="#0d267a" stroke="#0d267a" points="16109.5,-3605 16050.5,-3605 16050.5,-3542 16109.5,-3542 16109.5,-3605"/>
<text text-anchor="middle" x="16080" y="-3593" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="16080" y="-3582" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_start</text>
<text text-anchor="middle" x="16080" y="-3571" font-family="Arial" font-size="10.00" fill="#ffffff">5.83%</text>
<text text-anchor="middle" x="16080" y="-3560" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="16080" y="-3549" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- 0x0000000000000cc0&#45;&gt;_dl_start -->
<g id="edge2" class="edge"><title>0x0000000000000cc0&#45;&gt;_dl_start</title>
<path fill="none" stroke="#0d267a" stroke-width="0.5" d="M16055.6,-3644.92C16059.5,-3633.56 16064,-3620.59 16068.1,-3608.9"/>
<polygon fill="#0d267a" stroke="#0d267a" stroke-width="0.5" points="16069.3,-3609.03 16069.3,-3605.32 16067,-3608.23 16069.3,-3609.03"/>
<text text-anchor="middle" x="16080" y="-3628" font-family="Arial" font-size="10.00" fill="#0d267a">5.83%</text>
<text text-anchor="middle" x="16080" y="-3617" font-family="Arial" font-size="10.00" fill="#0d267a">1×</text>
</g>
<!-- _start -->
<g id="node5" class="node"><title>_start</title>
<polygon fill="#f63c01" stroke="#f63c01" points="16029,-3605 15979,-3605 15979,-3542 16029,-3542 16029,-3605"/>
<text text-anchor="middle" x="16004" y="-3593" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16004" y="-3582" font-family="Arial" font-size="10.00" fill="#ffffff">_start</text>
<text text-anchor="middle" x="16004" y="-3571" font-family="Arial" font-size="10.00" fill="#ffffff">93.97%</text>
<text text-anchor="middle" x="16004" y="-3560" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="16004" y="-3549" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- 0x0000000000000cc0&#45;&gt;_start -->
<g id="edge3" class="edge"><title>0x0000000000000cc0&#45;&gt;_start</title>
<path fill="none" stroke="#f63c01" stroke-width="3.76" d="M16028,-3644.7C16026.6,-3641.79 16025.2,-3638.86 16024,-3636 16021.1,-3629.25 16018.4,-3621.94 16016,-3614.8"/>
<polygon fill="#f63c01" stroke="#f63c01" stroke-width="3.76" points="16019.1,-3613.38 16012.8,-3605.23 16012.6,-3615.5 16019.1,-3613.38"/>
<text text-anchor="middle" x="16041" y="-3628" font-family="Arial" font-size="10.00" fill="#f63c01">93.97%</text>
<text text-anchor="middle" x="16041" y="-3617" font-family="Arial" font-size="10.00" fill="#f63c01">1×</text>
</g>
<!-- _dl_sysdep_start -->
<g id="node52" class="node"><title>_dl_sysdep_start</title>
<polygon fill="#0d267a" stroke="#0d267a" points="16186.5,-3502 16095.5,-3502 16095.5,-3439 16186.5,-3439 16186.5,-3502"/>
<text text-anchor="middle" x="16141" y="-3490" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="16141" y="-3479" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_sysdep_start</text>
<text text-anchor="middle" x="16141" y="-3468" font-family="Arial" font-size="10.00" fill="#ffffff">5.83%</text>
<text text-anchor="middle" x="16141" y="-3457" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="16141" y="-3446" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- _dl_start&#45;&gt;_dl_sysdep_start -->
<g id="edge41" class="edge"><title>_dl_start&#45;&gt;_dl_sysdep_start</title>
<path fill="none" stroke="#0d267a" stroke-width="0.5" d="M16098.5,-3541.92C16105.4,-3530.46 16113.3,-3517.36 16120.4,-3505.6"/>
<polygon fill="#0d267a" stroke="#0d267a" stroke-width="0.5" points="16121.6,-3505.95 16122.4,-3502.32 16119.5,-3504.68 16121.6,-3505.95"/>
<text text-anchor="middle" x="16130" y="-3525" font-family="Arial" font-size="10.00" fill="#0d267a">5.83%</text>
<text text-anchor="middle" x="16130" y="-3514" font-family="Arial" font-size="10.00" fill="#0d267a">1×</text>
</g>
<!-- _dl_runtime_resolve_avx -->
<g id="node42" class="node"><title>_dl_runtime_resolve_avx</title>
<polygon fill="#f63b01" stroke="#f63b01" points="15945,-3502 15823,-3502 15823,-3439 15945,-3439 15945,-3502"/>
<text text-anchor="middle" x="15884" y="-3490" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="15884" y="-3479" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_runtime_resolve_avx</text>
<text text-anchor="middle" x="15884" y="-3468" font-family="Arial" font-size="10.00" fill="#ffffff">94.16%</text>
<text text-anchor="middle" x="15884" y="-3457" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15884" y="-3446" font-family="Arial" font-size="10.00" fill="#ffffff">5×</text>
</g>
<!-- _start&#45;&gt;_dl_runtime_resolve_avx -->
<g id="edge43" class="edge"><title>_start&#45;&gt;_dl_runtime_resolve_avx</title>
<path fill="none" stroke="#f63c01" stroke-width="3.76" d="M15978.8,-3551.33C15964.2,-3538.99 15945.3,-3523.07 15928.2,-3508.7"/>
<polygon fill="#f63c01" stroke="#f63c01" stroke-width="3.76" points="15930.1,-3505.88 15920.5,-3502.23 15925.7,-3511.07 15930.1,-3505.88"/>
<text text-anchor="middle" x="15972" y="-3525" font-family="Arial" font-size="10.00" fill="#f63c01">93.97%</text>
<text text-anchor="middle" x="15972" y="-3514" font-family="Arial" font-size="10.00" fill="#f63c01">1×</text>
</g>
<!-- 0x00000000000d46e0 -->
<g id="node6" class="node"><title>0x00000000000d46e0</title>
<polygon fill="#0d1074" stroke="#0d1074" points="20235.5,-866 20124.5,-866 20124.5,-803 20235.5,-803 20235.5,-866"/>
<text text-anchor="middle" x="20180" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="20180" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">0x00000000000d46e0</text>
<text text-anchor="middle" x="20180" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.86%</text>
<text text-anchor="middle" x="20180" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.86%)</text>
<text text-anchor="middle" x="20180" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2 -->
<g id="node8" class="node"><title>_dl_runtime_resolve_avx&#39;2</title>
<polygon fill="#0b9d73" stroke="#0b9d73" points="19729,-1216 19601,-1216 19601,-1153 19729,-1153 19729,-1216"/>
<text text-anchor="middle" x="19665" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="19665" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_runtime_resolve_avx&#39;2</text>
<text text-anchor="middle" x="19665" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">32.33%</text>
<text text-anchor="middle" x="19665" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="19665" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">237×</text>
</g>
<!-- TemperatureData::read()&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge4" class="edge"><title>TemperatureData::read()&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M15944.5,-3119.58C16440,-3120.06 19811,-3119.6 19811,-3018.5 19811,-3018.5 19811,-3018.5 19811,-1327.5 19811,-1279.35 19769.7,-1242.25 19731,-1218.06"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="19731.4,-1216.85 19727.8,-1216.05 19730.1,-1218.93 19731.4,-1216.85"/>
<text text-anchor="middle" x="19825" y="-2155.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.21%</text>
<text text-anchor="middle" x="19825" y="-2144.5" font-family="Arial" font-size="10.00" fill="#0d0e73">13×</text>
</g>
<!-- is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node9" class="node"><title>is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#f25502" stroke="#f25502" points="10095,-3049 9651,-3049 9651,-2986 10095,-2986 10095,-3049"/>
<text text-anchor="middle" x="9873" y="-3037" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9873" y="-3026" font-family="Arial" font-size="10.00" fill="#ffffff">is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="9873" y="-3015" font-family="Arial" font-size="10.00" fill="#ffffff">91.32%</text>
<text text-anchor="middle" x="9873" y="-3004" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="9873" y="-2993" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- TemperatureData::read()&#45;&gt;is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge5" class="edge"><title>TemperatureData::read()&#45;&gt;is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#f25502" stroke-width="3.65" d="M15823,-3118.48C15271.2,-3109.2 11135,-3039.71 10104.9,-3022.4"/>
<polygon fill="#f25502" stroke="#f25502" stroke-width="3.65" points="10104.8,-3019.03 10095.1,-3022.23 10104.6,-3025.75 10104.8,-3019.03"/>
<text text-anchor="middle" x="13434" y="-3072" font-family="Arial" font-size="10.00" fill="#f25502">91.32%</text>
<text text-anchor="middle" x="13434" y="-3061" font-family="Arial" font-size="10.00" fill="#f25502">11×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type) -->
<g id="node10" class="node"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="17836.5,-3049 13931.5,-3049 13931.5,-2986 17836.5,-2986 17836.5,-3049"/>
<text text-anchor="middle" x="15884" y="-3037" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15884" y="-3026" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type)</text>
<text text-anchor="middle" x="15884" y="-3015" font-family="Arial" font-size="10.00" fill="#ffffff">0.98%</text>
<text text-anchor="middle" x="15884" y="-3004" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15884" y="-2993" font-family="Arial" font-size="10.00" fill="#ffffff">17×</text>
</g>
<!-- TemperatureData::read()&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type) -->
<g id="edge6" class="edge"><title>TemperatureData::read()&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M15884,-3088.92C15884,-3077.56 15884,-3064.59 15884,-3052.9"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="15885.2,-3052.82 15884,-3049.32 15882.8,-3052.82 15885.2,-3052.82"/>
<text text-anchor="middle" x="15898" y="-3072" font-family="Arial" font-size="10.00" fill="#0d1174">0.98%</text>
<text text-anchor="middle" x="15898" y="-3061" font-family="Arial" font-size="10.00" fill="#0d1174">17×</text>
</g>
<!-- __dynamic_cast -->
<g id="node16" class="node"><title>__dynamic_cast</title>
<polygon fill="#0c5f88" stroke="#0c5f88" points="18423.5,-969 18322.5,-969 18322.5,-906 18423.5,-906 18423.5,-969"/>
<text text-anchor="middle" x="18373" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="18373" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">__dynamic_cast</text>
<text text-anchor="middle" x="18373" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">16.73%</text>
<text text-anchor="middle" x="18373" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(3.84%)</text>
<text text-anchor="middle" x="18373" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">25447×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;__dynamic_cast -->
<g id="edge29" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;__dynamic_cast</title>
<path fill="none" stroke="#0d297b" stroke-width="0.5" d="M19600.9,-1177.32C19527.2,-1170.41 19402.4,-1159.37 19295,-1153 19281.2,-1152.18 19058.2,-1151.99 19047,-1144 19019,-1124.1 19030.7,-1104.3 19019,-1072 19009,-1044.24 19020.9,-1027.57 18998,-1009 18954,-973.388 18571.5,-949.225 18427.5,-941.318"/>
<polygon fill="#0d297b" stroke="#0d297b" stroke-width="0.5" points="18427.3,-940.08 18423.7,-941.112 18427.2,-942.526 18427.3,-940.08"/>
<text text-anchor="middle" x="19033" y="-1043.5" font-family="Arial" font-size="10.00" fill="#0d297b">6.44%</text>
<text text-anchor="middle" x="19033" y="-1032.5" font-family="Arial" font-size="10.00" fill="#0d297b">2×</text>
</g>
<!-- operator new(unsigned long) -->
<g id="node34" class="node"><title>operator new(unsigned long)</title>
<polygon fill="#0d347e" stroke="#0d347e" points="19134,-516 18996,-516 18996,-453 19134,-453 19134,-516"/>
<text text-anchor="middle" x="19065" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="19065" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">operator new(unsigned long)</text>
<text text-anchor="middle" x="19065" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">8.74%</text>
<text text-anchor="middle" x="19065" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.61%)</text>
<text text-anchor="middle" x="19065" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">17417×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;operator new(unsigned long) -->
<g id="edge32" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0d2279" stroke-width="0.5" d="M19600.9,-1179.27C19534,-1174.06 19426.3,-1163.4 19335,-1144 19229,-1121.47 19179.2,-1148.07 19102,-1072 19095.1,-1065.19 19055.6,-911.971 19048,-906 19025.5,-888.444 18940.4,-916.893 18920,-897 18892.8,-870.526 18879.9,-587.546 18901,-556 18921.5,-525.301 18958.5,-507.906 18992.1,-498.081"/>
<polygon fill="#0d2279" stroke="#0d2279" stroke-width="0.5" points="18992.7,-499.175 18995.8,-497.037 18992.1,-496.819 18992.7,-499.175"/>
<text text-anchor="middle" x="18922" y="-837.5" font-family="Arial" font-size="10.00" fill="#0d2279">4.97%</text>
<text text-anchor="middle" x="18922" y="-826.5" font-family="Arial" font-size="10.00" fill="#0d2279">2×</text>
</g>
<!-- operator delete(void*) -->
<g id="node36" class="node"><title>operator delete(void*)</title>
<polygon fill="#0d2f7c" stroke="#0d2f7c" points="21330.5,-619 21223.5,-619 21223.5,-556 21330.5,-556 21330.5,-619"/>
<text text-anchor="middle" x="21277" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="21277" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">operator delete(void*)</text>
<text text-anchor="middle" x="21277" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">7.59%</text>
<text text-anchor="middle" x="21277" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.10%)</text>
<text text-anchor="middle" x="21277" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">17417×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;operator delete(void*) -->
<g id="edge31" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;operator delete(void*)</title>
<path fill="none" stroke="#0d2279" stroke-width="0.5" d="M19729.3,-1183.62C19911.3,-1183.51 20427.1,-1179.93 20592,-1144 20912.2,-1074.22 21091.1,-1137.28 21275,-866 21301.2,-827.388 21288.9,-688.414 21281.4,-623.001"/>
<polygon fill="#0d2279" stroke="#0d2279" stroke-width="0.5" points="21282.5,-622.516 21280.9,-619.181 21280.1,-622.799 21282.5,-622.516"/>
<text text-anchor="middle" x="21282" y="-889" font-family="Arial" font-size="10.00" fill="#0d2279">4.83%</text>
<text text-anchor="middle" x="21282" y="-878" font-family="Arial" font-size="10.00" fill="#0d2279">2×</text>
</g>
<!-- _dl_fixup -->
<g id="node38" class="node"><title>_dl_fixup</title>
<polygon fill="#0d2279" stroke="#0d2279" points="20443.5,-1072 20384.5,-1072 20384.5,-1009 20443.5,-1009 20443.5,-1072"/>
<text text-anchor="middle" x="20414" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="20414" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_fixup</text>
<text text-anchor="middle" x="20414" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">4.83%</text>
<text text-anchor="middle" x="20414" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.05%)</text>
<text text-anchor="middle" x="20414" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">242×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;_dl_fixup -->
<g id="edge30" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;_dl_fixup</title>
<path fill="none" stroke="#0d2279" stroke-width="0.5" d="M19729.3,-1183.71C19893.3,-1183.72 20318.3,-1180.2 20370,-1144 20392.3,-1128.4 20403.4,-1099.05 20408.8,-1075.75"/>
<polygon fill="#0d2279" stroke="#0d2279" stroke-width="0.5" points="20410.1,-1075.74 20409.7,-1072.06 20407.7,-1075.21 20410.1,-1075.74"/>
<text text-anchor="middle" x="20422" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d2279">4.82%</text>
<text text-anchor="middle" x="20422" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d2279">237×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) -->
<g id="node44" class="node"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="20801.5,-866 20264.5,-866 20264.5,-803 20801.5,-803 20801.5,-866"/>
<text text-anchor="middle" x="20533" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="20533" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long)</text>
<text text-anchor="middle" x="20533" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="20533" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.74%)</text>
<text text-anchor="middle" x="20533" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8472×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) -->
<g id="edge33" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19729.1,-1176.81C19780.4,-1170.65 19854,-1160.01 19917,-1144 20119.4,-1092.56 20214.6,-1125.36 20353,-969 20372.4,-947.101 20354.4,-929.368 20372,-906 20384.1,-889.867 20400.8,-877.363 20418.7,-867.691"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="20419.3,-868.756 20421.9,-866.041 20418.2,-866.589 20419.3,-868.756"/>
<text text-anchor="middle" x="20358" y="-992" font-family="Arial" font-size="10.00" fill="#0d0f73">0.48%</text>
<text text-anchor="middle" x="20358" y="-981" font-family="Arial" font-size="10.00" fill="#0d0f73">1×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() -->
<g id="node45" class="node"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="18994,-1072 18564,-1072 18564,-1009 18994,-1009 18994,-1072"/>
<text text-anchor="middle" x="18779" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="18779" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</text>
<text text-anchor="middle" x="18779" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.60%</text>
<text text-anchor="middle" x="18779" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="18779" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">17062×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() -->
<g id="edge34" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M19600.9,-1177.11C19527.2,-1170.03 19402.5,-1158.82 19295,-1153 19275.7,-1151.96 18963.1,-1156.04 18948,-1144 18925.4,-1125.97 18952.4,-1101.47 18932,-1081 18929.7,-1078.69 18927.3,-1076.52 18924.8,-1074.46"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="18925.3,-1073.31 18921.8,-1072.11 18923.8,-1075.24 18925.3,-1073.31"/>
<text text-anchor="middle" x="18962" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.30%</text>
<text text-anchor="middle" x="18962" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0e73">1×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="node46" class="node"><title>std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;)</title>
<polygon fill="#0d1b77" stroke="#0d1b77" points="18182,-1072 17724,-1072 17724,-1009 18182,-1009 18182,-1072"/>
<text text-anchor="middle" x="17953" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="17953" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;)</text>
<text text-anchor="middle" x="17953" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">3.33%</text>
<text text-anchor="middle" x="17953" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.51%)</text>
<text text-anchor="middle" x="17953" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="edge35" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;)</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M19600.7,-1177.11C19524,-1169.79 19391.8,-1158.14 19278,-1153 19106.2,-1145.24 18675.2,-1160.79 18504,-1144 18359.7,-1129.85 18196.7,-1097.44 18085.7,-1072.83"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="18085.8,-1071.59 18082.1,-1072.03 18085.2,-1073.99 18085.8,-1071.59"/>
<text text-anchor="middle" x="18518" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="18518" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0f74">1×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const -->
<g id="node47" class="node"><title>std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const</title>
<polygon fill="#0d1f78" stroke="#0d1f78" points="21271,-866 20891,-866 20891,-803 21271,-803 21271,-866"/>
<text text-anchor="middle" x="21081" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="21081" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const</text>
<text text-anchor="middle" x="21081" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">4.20%</text>
<text text-anchor="middle" x="21081" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.17%)</text>
<text text-anchor="middle" x="21081" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const -->
<g id="edge36" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M19729.1,-1184.08C19898.6,-1185.04 20355.1,-1183.73 20500,-1144 20716.3,-1084.68 20942.6,-934.848 21036.3,-868.263"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="21037.2,-869.152 21039.3,-866.124 21035.8,-867.156 21037.2,-869.152"/>
<text text-anchor="middle" x="20879" y="-992" font-family="Arial" font-size="10.00" fill="#0d1876">2.74%</text>
<text text-anchor="middle" x="20879" y="-981" font-family="Arial" font-size="10.00" fill="#0d1876">1×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const -->
<g id="node48" class="node"><title>std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const</title>
<polygon fill="#0c5d88" stroke="#0c5d88" points="19826.5,-1072 19503.5,-1072 19503.5,-1009 19826.5,-1009 19826.5,-1072"/>
<text text-anchor="middle" x="19665" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="19665" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const</text>
<text text-anchor="middle" x="19665" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">16.40%</text>
<text text-anchor="middle" x="19665" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="19665" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const -->
<g id="edge37" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const</title>
<path fill="none" stroke="#0d1776" stroke-width="0.5" d="M19665,-1152.69C19665,-1130.08 19665,-1099.36 19665,-1075.95"/>
<polygon fill="#0d1776" stroke="#0d1776" stroke-width="0.5" points="19666.2,-1075.75 19665,-1072.25 19663.8,-1075.75 19666.2,-1075.75"/>
<text text-anchor="middle" x="19679" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1776">2.33%</text>
<text text-anchor="middle" x="19679" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1776">1×</text>
</g>
<!-- std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long) -->
<g id="node49" class="node"><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="19463.5,-1072 19106.5,-1072 19106.5,-1009 19463.5,-1009 19463.5,-1072"/>
<text text-anchor="middle" x="19285" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="19285" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</text>
<text text-anchor="middle" x="19285" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.57%</text>
<text text-anchor="middle" x="19285" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="19285" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">39×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long) -->
<g id="edge38" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19600.8,-1178.4C19556.4,-1173.32 19496.6,-1163.35 19447,-1144 19403.1,-1126.9 19358.3,-1097.41 19326.9,-1074.44"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="19327.5,-1073.32 19323.9,-1072.24 19326,-1075.3 19327.5,-1073.32"/>
<text text-anchor="middle" x="19461" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.57%</text>
<text text-anchor="middle" x="19461" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0f73">2×</text>
</g>
<!-- std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="node50" class="node"><title>std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)</title>
<polygon fill="#0d357e" stroke="#0d357e" points="18554.5,-1072 18191.5,-1072 18191.5,-1009 18554.5,-1009 18554.5,-1072"/>
<text text-anchor="middle" x="18373" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="18373" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)</text>
<text text-anchor="middle" x="18373" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">8.86%</text>
<text text-anchor="middle" x="18373" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(1.03%)</text>
<text text-anchor="middle" x="18373" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">16893×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="edge39" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M19600.7,-1177.3C19524,-1170.16 19391.8,-1158.7 19278,-1153 19184.8,-1148.33 18950.7,-1154.7 18858,-1144 18731.3,-1129.38 18588.7,-1097.32 18491.1,-1072.92"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="18491.3,-1071.72 18487.6,-1072.06 18490.7,-1074.1 18491.3,-1071.72"/>
<text text-anchor="middle" x="18872" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.03%</text>
<text text-anchor="middle" x="18872" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1174">2×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) -->
<g id="node51" class="node"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</title>
<polygon fill="#0d247a" stroke="#0d247a" points="18588,-763 17942,-763 17942,-700 18588,-700 18588,-763"/>
<text text-anchor="middle" x="18265" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="18265" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</text>
<text text-anchor="middle" x="18265" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">5.31%</text>
<text text-anchor="middle" x="18265" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(1.28%)</text>
<text text-anchor="middle" x="18265" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">8480×</text>
</g>
<!-- _dl_runtime_resolve_avx&#39;2&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) -->
<g id="edge40" class="edge"><title>_dl_runtime_resolve_avx&#39;2&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M19600.7,-1177.42C19526.4,-1170.59 19400.5,-1159.59 19292,-1153 19279.5,-1152.24 19075.4,-1152.36 19066,-1144 19020.7,-1103.59 19082.4,-1056.85 19045,-1009 19016.8,-972.901 18987.4,-995.525 18950,-969 18914.8,-944.039 18905.7,-934.79 18885,-897 18864.1,-859.004 18891.9,-831.24 18859,-803 18836.7,-783.823 18717.6,-767.803 18591.9,-755.906"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="18591.7,-754.665 18588.1,-755.556 18591.5,-757.104 18591.7,-754.665"/>
<text text-anchor="middle" x="18964" y="-940.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.57%</text>
<text text-anchor="middle" x="18964" y="-929.5" font-family="Arial" font-size="10.00" fill="#0d1876">1×</text>
</g>
<!-- bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="node64" class="node"><title>bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="10566,-2946 9180,-2946 9180,-2883 10566,-2883 10566,-2946"/>
<text text-anchor="middle" x="9873" y="-2934" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9873" y="-2923" font-family="Arial" font-size="10.00" fill="#ffffff">bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</text>
<text text-anchor="middle" x="9873" y="-2912" font-family="Arial" font-size="10.00" fill="#ffffff">0.58%</text>
<text text-anchor="middle" x="9873" y="-2901" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="9873" y="-2890" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="edge66" class="edge"><title>is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M9873,-2985.92C9873,-2974.56 9873,-2961.59 9873,-2949.9"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="9874.23,-2949.82 9873,-2946.32 9871.78,-2949.82 9874.23,-2949.82"/>
<text text-anchor="middle" x="9887" y="-2969" font-family="Arial" font-size="10.00" fill="#0d0f73">0.58%</text>
<text text-anchor="middle" x="9887" y="-2958" font-family="Arial" font-size="10.00" fill="#0d0f73">11×</text>
</g>
<!-- std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type) -->
<g id="node79" class="node"><title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)</title>
<polygon fill="#f15c02" stroke="#f15c02" points="8460.5,-2946 7843.5,-2946 7843.5,-2883 8460.5,-2883 8460.5,-2946"/>
<text text-anchor="middle" x="8152" y="-2934" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="8152" y="-2923" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)</text>
<text text-anchor="middle" x="8152" y="-2912" font-family="Arial" font-size="10.00" fill="#ffffff">90.56%</text>
<text text-anchor="middle" x="8152" y="-2901" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="8152" y="-2890" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type) -->
<g id="edge67" class="edge"><title>is_number(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)</title>
<path fill="none" stroke="#f15c02" stroke-width="3.62" d="M9650.65,-3003.45C9350.31,-2985.83 8813.18,-2954.3 8470.15,-2934.17"/>
<polygon fill="#f15c02" stroke="#f15c02" stroke-width="3.62" points="8470.25,-2930.85 8460.57,-2933.61 8469.86,-2937.48 8470.25,-2930.85"/>
<text text-anchor="middle" x="9184" y="-2969" font-family="Arial" font-size="10.00" fill="#f15c02">90.56%</text>
<text text-anchor="middle" x="9184" y="-2958" font-family="Arial" font-size="10.00" fill="#f15c02">11×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;) -->
<g id="node146" class="node"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="17921,-2946 13847,-2946 13847,-2883 17921,-2883 17921,-2946"/>
<text text-anchor="middle" x="15884" y="-2934" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15884" y="-2923" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;)</text>
<text text-anchor="middle" x="15884" y="-2912" font-family="Arial" font-size="10.00" fill="#ffffff">0.96%</text>
<text text-anchor="middle" x="15884" y="-2901" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="15884" y="-2890" font-family="Arial" font-size="10.00" fill="#ffffff">17×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type)&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;) -->
<g id="edge165" class="edge"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt;, boost::algorithm::token_compress_mode_type)&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M15884,-2985.92C15884,-2974.56 15884,-2961.59 15884,-2949.9"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="15885.2,-2949.82 15884,-2946.32 15882.8,-2949.82 15885.2,-2949.82"/>
<text text-anchor="middle" x="15898" y="-2969" font-family="Arial" font-size="10.00" fill="#0d1174">0.96%</text>
<text text-anchor="middle" x="15898" y="-2958" font-family="Arial" font-size="10.00" fill="#0d1174">17×</text>
</g>
<!-- __GI___stpncpy -->
<g id="node11" class="node"><title>__GI___stpncpy</title>
<polygon fill="#0d1876" stroke="#0d1876" points="21008.5,-619 20921.5,-619 20921.5,-556 21008.5,-556 21008.5,-619"/>
<text text-anchor="middle" x="20965" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="20965" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">__GI___stpncpy</text>
<text text-anchor="middle" x="20965" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">2.67%</text>
<text text-anchor="middle" x="20965" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.69%)</text>
<text text-anchor="middle" x="20965" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- strnlen -->
<g id="node12" class="node"><title>strnlen</title>
<polygon fill="#0d1174" stroke="#0d1174" points="20998.5,-516 20931.5,-516 20931.5,-453 20998.5,-453 20998.5,-516"/>
<text text-anchor="middle" x="20965" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="20965" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">strnlen</text>
<text text-anchor="middle" x="20965" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">1.06%</text>
<text text-anchor="middle" x="20965" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(1.06%)</text>
<text text-anchor="middle" x="20965" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- __GI___stpncpy&#45;&gt;strnlen -->
<g id="edge7" class="edge"><title>__GI___stpncpy&#45;&gt;strnlen</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M20965,-555.923C20965,-544.557 20965,-531.589 20965,-519.904"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="20966.2,-519.822 20965,-516.322 20963.8,-519.822 20966.2,-519.822"/>
<text text-anchor="middle" x="20979" y="-539" font-family="Arial" font-size="10.00" fill="#0d1174">1.06%</text>
<text text-anchor="middle" x="20979" y="-528" font-family="Arial" font-size="10.00" fill="#0d1174">8448×</text>
</g>
<!-- __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const -->
<g id="node13" class="node"><title>__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18855,-866 17713,-866 17713,-803 18855,-803 18855,-866"/>
<text text-anchor="middle" x="18284" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="18284" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const</text>
<text text-anchor="middle" x="18284" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.84%</text>
<text text-anchor="middle" x="18284" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.84%)</text>
<text text-anchor="middle" x="18284" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8523×</text>
</g>
<!-- __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const -->
<g id="node14" class="node"><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const</title>
<polygon fill="#0d4582" stroke="#0d4582" points="20115,-866 18967,-866 18967,-803 20115,-803 20115,-866"/>
<text text-anchor="middle" x="19541" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="19541" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const</text>
<text text-anchor="middle" x="19541" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">12.04%</text>
<text text-anchor="middle" x="19541" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(3.29%)</text>
<text text-anchor="middle" x="19541" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">16924×</text>
</g>
<!-- __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge9" class="edge"><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d317d" stroke-width="0.5" d="M19663.7,-866.078C19723.1,-887.412 19789.7,-922.338 19828,-978 19851.7,-1012.42 19850.7,-1035.11 19831,-1072 19810.2,-1111.03 19769,-1138.83 19732.8,-1156.9"/>
<polygon fill="#0d317d" stroke="#0d317d" stroke-width="0.5" points="19732,-1155.97 19729.4,-1158.62 19733,-1158.17 19732,-1155.97"/>
<text text-anchor="middle" x="19855" y="-992" font-family="Arial" font-size="10.00" fill="#0d317d">8.01%</text>
<text text-anchor="middle" x="19855" y="-981" font-family="Arial" font-size="10.00" fill="#0d317d">1×</text>
</g>
<!-- __strcmp_sse2_unaligned -->
<g id="node15" class="node"><title>__strcmp_sse2_unaligned</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19606,-763 19476,-763 19476,-700 19606,-700 19606,-763"/>
<text text-anchor="middle" x="19541" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="19541" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">__strcmp_sse2_unaligned</text>
<text text-anchor="middle" x="19541" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="19541" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.74%)</text>
<text text-anchor="middle" x="19541" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">16924×</text>
</g>
<!-- __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const&#45;&gt;__strcmp_sse2_unaligned -->
<g id="edge8" class="edge"><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const&#45;&gt;__strcmp_sse2_unaligned</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M19541,-802.923C19541,-791.557 19541,-778.589 19541,-766.904"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="19542.2,-766.822 19541,-763.322 19539.8,-766.822 19542.2,-766.822"/>
<text text-anchor="middle" x="19557.5" y="-786" font-family="Arial" font-size="10.00" fill="#0d1074">0.74%</text>
<text text-anchor="middle" x="19557.5" y="-775" font-family="Arial" font-size="10.00" fill="#0d1074">16923×</text>
</g>
<!-- __dynamic_cast&#45;&gt;__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const -->
<g id="edge10" class="edge"><title>__dynamic_cast&#45;&gt;__cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M18346.1,-905.923C18335.8,-894.263 18324,-880.917 18313.5,-869"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="18314.4,-868.138 18311.2,-866.322 18312.6,-869.758 18314.4,-868.138"/>
<text text-anchor="middle" x="18351" y="-889" font-family="Arial" font-size="10.00" fill="#0d1074">0.84%</text>
<text text-anchor="middle" x="18351" y="-878" font-family="Arial" font-size="10.00" fill="#0d1074">8523×</text>
</g>
<!-- __dynamic_cast&#45;&gt;__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const -->
<g id="edge11" class="edge"><title>__dynamic_cast&#45;&gt;__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const</title>
<path fill="none" stroke="#0d4582" stroke-width="0.5" d="M18423.6,-932.128C18553.6,-920.88 18908.9,-890.156 19184.3,-866.342"/>
<polygon fill="#0d4582" stroke="#0d4582" stroke-width="0.5" points="19184.6,-867.549 19188,-866.027 19184.4,-865.109 19184.6,-867.549"/>
<text text-anchor="middle" x="19079" y="-889" font-family="Arial" font-size="10.00" fill="#0d4582">12.04%</text>
<text text-anchor="middle" x="19079" y="-878" font-family="Arial" font-size="10.00" fill="#0d4582">16924×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val) -->
<g id="node17" class="node"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)</title>
<polygon fill="#0d2379" stroke="#0d2379" points="16049.5,-1216 14060.5,-1216 14060.5,-1153 16049.5,-1153 16049.5,-1216"/>
<text text-anchor="middle" x="15055" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15055" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)</text>
<text text-anchor="middle" x="15055" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">5.15%</text>
<text text-anchor="middle" x="15055" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(1.16%)</text>
<text text-anchor="middle" x="15055" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- bool __gnu_cxx::__ops::_Iter_less_val::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) const -->
<g id="node18" class="node"><title>bool __gnu_cxx::__ops::_Iter_less_val::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) const</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="17028,-1072 15904,-1072 15904,-1009 17028,-1009 17028,-1072"/>
<text text-anchor="middle" x="16466" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16466" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">bool __gnu_cxx::__ops::_Iter_less_val::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) const</text>
<text text-anchor="middle" x="16466" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="16466" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.39%)</text>
<text text-anchor="middle" x="16466" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)&#45;&gt;bool __gnu_cxx::__ops::_Iter_less_val::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) const -->
<g id="edge12" class="edge"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)&#45;&gt;bool __gnu_cxx::__ops::_Iter_less_val::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) const</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M15146.6,-1152.91C15225,-1128.3 15341.6,-1095.52 15446,-1081 15545.7,-1067.14 15798.4,-1075.7 15899,-1072 15899.4,-1071.99 15899.8,-1071.97 15900.2,-1071.96"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="15900.4,-1073.18 15903.8,-1071.82 15900.3,-1070.73 15900.4,-1073.18"/>
<text text-anchor="middle" x="15460" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="15460" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0f73">8448×</text>
</g>
<!-- std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;) -->
<g id="node19" class="node"><title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;)</title>
<polygon fill="#0d1575" stroke="#0d1575" points="15894.5,-1072 14149.5,-1072 14149.5,-1009 15894.5,-1009 15894.5,-1072"/>
<text text-anchor="middle" x="15022" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15022" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;)</text>
<text text-anchor="middle" x="15022" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">1.87%</text>
<text text-anchor="middle" x="15022" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.64%)</text>
<text text-anchor="middle" x="15022" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)&#45;&gt;std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;) -->
<g id="edge13" class="edge"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)&#45;&gt;std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;)</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M15047.8,-1152.69C15042.6,-1130.08 15035.4,-1099.36 15030,-1075.95"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="15031.1,-1075.38 15029.1,-1072.25 15028.7,-1075.94 15031.1,-1075.38"/>
<text text-anchor="middle" x="15060" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1575">1.87%</text>
<text text-anchor="middle" x="15060" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1575">8448×</text>
</g>
<!-- void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long) -->
<g id="node20" class="node"><title>void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long)</title>
<polygon fill="#0d1375" stroke="#0d1375" points="14140.5,-1072 13237.5,-1072 13237.5,-1009 14140.5,-1009 14140.5,-1072"/>
<text text-anchor="middle" x="13689" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13689" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long)</text>
<text text-anchor="middle" x="13689" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">1.47%</text>
<text text-anchor="middle" x="13689" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.71%)</text>
<text text-anchor="middle" x="13689" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)&#45;&gt;void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long) -->
<g id="edge14" class="edge"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)&#45;&gt;void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long)</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M14761.5,-1152.99C14532.7,-1129.2 14216.1,-1096.29 13986.3,-1072.4"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="13986.2,-1071.16 13982.6,-1072.02 13985.9,-1073.6 13986.2,-1071.16"/>
<text text-anchor="middle" x="14666" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.47%</text>
<text text-anchor="middle" x="14666" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1375">8448×</text>
</g>
<!-- std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag) -->
<g id="node142" class="node"><title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="16640,-969 14736,-969 14736,-906 16640,-906 16640,-969"/>
<text text-anchor="middle" x="15688" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15688" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag)</text>
<text text-anchor="middle" x="15688" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">1.10%</text>
<text text-anchor="middle" x="15688" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.29%)</text>
<text text-anchor="middle" x="15688" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;)&#45;&gt;std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag) -->
<g id="edge156" class="edge"><title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;)&#45;&gt;std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M15223.2,-1008.99C15305.4,-996.529 15400.3,-982.131 15482.9,-969.608"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="15483.5,-970.749 15486.8,-969.013 15483.2,-968.327 15483.5,-970.749"/>
<text text-anchor="middle" x="15429" y="-992" font-family="Arial" font-size="10.00" fill="#0d1174">1.10%</text>
<text text-anchor="middle" x="15429" y="-981" font-family="Arial" font-size="10.00" fill="#0d1174">8448×</text>
</g>
<!-- void std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long, std::random_access_iterator_tag) -->
<g id="node150" class="node"><title>void std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long, std::random_access_iterator_tag)</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="14343,-969 13281,-969 13281,-906 14343,-906 14343,-969"/>
<text text-anchor="middle" x="13812" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13812" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long, std::random_access_iterator_tag)</text>
<text text-anchor="middle" x="13812" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">0.64%</text>
<text text-anchor="middle" x="13812" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.32%)</text>
<text text-anchor="middle" x="13812" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long)&#45;&gt;void std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long, std::random_access_iterator_tag) -->
<g id="edge183" class="edge"><title>void std::advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long)&#45;&gt;void std::__advance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, long&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, long, std::random_access_iterator_tag)</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M13726.2,-1008.92C13740.6,-997.165 13757,-983.692 13771.6,-971.7"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="13772.5,-972.49 13774.5,-969.322 13771,-970.596 13772.5,-972.49"/>
<text text-anchor="middle" x="13776" y="-992" font-family="Arial" font-size="10.00" fill="#0d0f74">0.64%</text>
<text text-anchor="middle" x="13776" y="-981" font-family="Arial" font-size="10.00" fill="#0d0f74">8448×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;) -->
<g id="node21" class="node"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="17408.5,-1216 16851.5,-1216 16851.5,-1153 17408.5,-1153 17408.5,-1216"/>
<text text-anchor="middle" x="17130" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="17130" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;)</text>
<text text-anchor="middle" x="17130" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.54%</text>
<text text-anchor="middle" x="17130" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.54%)</text>
<text text-anchor="middle" x="17130" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">17039×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const -->
<g id="node22" class="node"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="16789,-763 16343,-763 16343,-700 16789,-700 16789,-763"/>
<text text-anchor="middle" x="16566" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16566" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const</text>
<text text-anchor="middle" x="16566" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">0.59%</text>
<text text-anchor="middle" x="16566" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="16566" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">34034×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) -->
<g id="node23" class="node"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="16895.5,-866 15282.5,-866 15282.5,-803 16895.5,-803 16895.5,-866"/>
<text text-anchor="middle" x="16089" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16089" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="16089" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.82%</text>
<text text-anchor="middle" x="16089" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="16089" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8514×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const -->
<g id="edge15" class="edge"><title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M16233.1,-802.991C16291.7,-790.579 16359.4,-776.245 16418.4,-763.757"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="16418.7,-764.936 16421.9,-763.013 16418.2,-762.54 16418.7,-764.936"/>
<text text-anchor="middle" x="16387.5" y="-786" font-family="Arial" font-size="10.00" fill="#0d0e73">0.30%</text>
<text text-anchor="middle" x="16387.5" y="-775" font-family="Arial" font-size="10.00" fill="#0d0e73">17028×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;) -->
<g id="node24" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;)</title>
<polygon fill="#0d1a77" stroke="#0d1a77" points="12613,-1216 6045,-1216 6045,-1153 12613,-1153 12613,-1216"/>
<text text-anchor="middle" x="9329" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9329" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;)</text>
<text text-anchor="middle" x="9329" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">3.20%</text>
<text text-anchor="middle" x="9329" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.68%)</text>
<text text-anchor="middle" x="9329" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag) -->
<g id="node25" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag)</title>
<polygon fill="#0d1776" stroke="#0d1776" points="11313,-1072 4597,-1072 4597,-1009 11313,-1009 11313,-1072"/>
<text text-anchor="middle" x="7955" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7955" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag)</text>
<text text-anchor="middle" x="7955" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">2.40%</text>
<text text-anchor="middle" x="7955" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.73%)</text>
<text text-anchor="middle" x="7955" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag) -->
<g id="edge16" class="edge"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag)</title>
<path fill="none" stroke="#0d1776" stroke-width="0.5" d="M9033.82,-1152.99C8803.6,-1129.2 8485.2,-1096.29 8254.01,-1072.4"/>
<polygon fill="#0d1776" stroke="#0d1776" stroke-width="0.5" points="8253.88,-1071.16 8250.27,-1072.02 8253.63,-1073.59 8253.88,-1071.16"/>
<text text-anchor="middle" x="8937" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1776">2.40%</text>
<text text-anchor="middle" x="8937" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1776">8415×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) -->
<g id="node26" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1475" stroke="#0d1475" points="10232,-969 4716,-969 4716,-906 10232,-906 10232,-969"/>
<text text-anchor="middle" x="7474" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7474" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="7474" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">1.66%</text>
<text text-anchor="middle" x="7474" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(1.08%)</text>
<text text-anchor="middle" x="7474" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">16830×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) -->
<g id="edge17" class="edge"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;, std::random_access_iterator_tag)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1475" stroke-width="0.5" d="M7809.71,-1008.99C7750.59,-996.579 7682.33,-982.245 7622.86,-969.757"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width="0.5" points="7622.99,-968.533 7619.31,-969.013 7622.49,-970.931 7622.99,-968.533"/>
<text text-anchor="middle" x="7774.5" y="-992" font-family="Arial" font-size="10.00" fill="#0d1475">1.66%</text>
<text text-anchor="middle" x="7774.5" y="-981" font-family="Arial" font-size="10.00" fill="#0d1475">16830×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const -->
<g id="node30" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="6639,-866 5217,-866 5217,-803 6639,-803 6639,-866"/>
<text text-anchor="middle" x="5928" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="5928" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const</text>
<text text-anchor="middle" x="5928" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.88%</text>
<text text-anchor="middle" x="5928" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.88%)</text>
<text text-anchor="middle" x="5928" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">50600×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const -->
<g id="edge20" class="edge"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M7007,-905.991C6814.45,-893.412 6591.69,-878.859 6398.75,-866.254"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="6398.63,-865.019 6395.06,-866.013 6398.47,-867.464 6398.63,-865.019"/>
<text text-anchor="middle" x="6856.5" y="-889" font-family="Arial" font-size="10.00" fill="#0d0f73">0.59%</text>
<text text-anchor="middle" x="6856.5" y="-878" font-family="Arial" font-size="10.00" fill="#0d0f73">33660×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node27" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d1f78" stroke="#0d1f78" points="14669,-1360 8475,-1360 8475,-1297 14669,-1297 14669,-1360"/>
<text text-anchor="middle" x="11572" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="11572" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="11572" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">4.30%</text>
<text text-anchor="middle" x="11572" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.42%)</text>
<text text-anchor="middle" x="11572" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;) -->
<g id="edge18" class="edge"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;)</title>
<path fill="none" stroke="#0d1a77" stroke-width="0.5" d="M11090.1,-1296.99C10713.5,-1273.15 10192.2,-1240.15 9814.62,-1216.24"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width="0.5" points="9814.59,-1215.01 9811.02,-1216.02 9814.44,-1217.46 9814.59,-1215.01"/>
<text text-anchor="middle" x="10924" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d1a77">3.20%</text>
<text text-anchor="middle" x="10924" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d1a77">8415×</text>
</g>
<!-- __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node28" class="node"><title>__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="6036,-1216 4556,-1216 4556,-1153 6036,-1153 6036,-1216"/>
<text text-anchor="middle" x="5296" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="5296" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="5296" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.68%</text>
<text text-anchor="middle" x="5296" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.44%)</text>
<text text-anchor="middle" x="5296" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge19" class="edge"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; __gnu_cxx::__ops::__iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M10319.8,-1297C10198.9,-1293.99 10078.1,-1290.95 9962,-1288 8898.42,-1260.95 8632.79,-1242.13 7569,-1225 6889.52,-1214.06 6719.38,-1231.92 6040,-1216 6039.84,-1216 6039.68,-1215.99 6039.52,-1215.99"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="6039.65,-1214.77 6036.12,-1215.91 6039.59,-1217.22 6039.65,-1214.77"/>
<text text-anchor="middle" x="9976" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.68%</text>
<text text-anchor="middle" x="9976" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;) -->
<g id="node29" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19274,-1216 17418,-1216 17418,-1153 19274,-1153 19274,-1216"/>
<text text-anchor="middle" x="18346" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="18346" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;)</text>
<text text-anchor="middle" x="18346" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.81%</text>
<text text-anchor="middle" x="18346" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.81%)</text>
<text text-anchor="middle" x="18346" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">25355×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;) -->
<g id="node31" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="2981,-1216 1671,-1216 1671,-1153 2981,-1153 2981,-1216"/>
<text text-anchor="middle" x="2326" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="2326" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;)</text>
<text text-anchor="middle" x="2326" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.54%</text>
<text text-anchor="middle" x="2326" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.54%)</text>
<text text-anchor="middle" x="2326" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">16940×</text>
</g>
<!-- __gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;) -->
<g id="node32" class="node"><title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="3835.5,-1216 2990.5,-1216 2990.5,-1153 3835.5,-1153 3835.5,-1216"/>
<text text-anchor="middle" x="3413" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="3413" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;)</text>
<text text-anchor="middle" x="3413" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.54%</text>
<text text-anchor="middle" x="3413" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.54%)</text>
<text text-anchor="middle" x="3413" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">16940×</text>
</g>
<!-- __gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*) -->
<g id="node33" class="node"><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*)</title>
<polygon fill="#0d1e78" stroke="#0d1e78" points="19224.5,-619 18905.5,-619 18905.5,-556 19224.5,-556 19224.5,-619"/>
<text text-anchor="middle" x="19065" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="19065" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*)</text>
<text text-anchor="middle" x="19065" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">4.07%</text>
<text text-anchor="middle" x="19065" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.47%)</text>
<text text-anchor="middle" x="19065" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">8507×</text>
</g>
<!-- __gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*)&#45;&gt;operator new(unsigned long) -->
<g id="edge21" class="edge"><title>__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*)&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0d1b77" stroke-width="0.5" d="M19065,-555.923C19065,-544.557 19065,-531.589 19065,-519.904"/>
<polygon fill="#0d1b77" stroke="#0d1b77" stroke-width="0.5" points="19066.2,-519.822 19065,-516.322 19063.8,-519.822 19066.2,-519.822"/>
<text text-anchor="middle" x="19079" y="-539" font-family="Arial" font-size="10.00" fill="#0d1b77">3.45%</text>
<text text-anchor="middle" x="19079" y="-528" font-family="Arial" font-size="10.00" fill="#0d1b77">8507×</text>
</g>
<!-- malloc -->
<g id="node43" class="node"><title>malloc</title>
<polygon fill="#0d4783" stroke="#0d4783" points="19748.5,-413 19689.5,-413 19689.5,-350 19748.5,-350 19748.5,-413"/>
<text text-anchor="middle" x="19719" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="19719" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">malloc</text>
<text text-anchor="middle" x="19719" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">12.39%</text>
<text text-anchor="middle" x="19719" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(2.33%)</text>
<text text-anchor="middle" x="19719" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">17460×</text>
</g>
<!-- operator new(unsigned long)&#45;&gt;malloc -->
<g id="edge74" class="edge"><title>operator new(unsigned long)&#45;&gt;malloc</title>
<path fill="none" stroke="#0d317d" stroke-width="0.5" d="M19134.1,-472.835C19273.4,-451.311 19583.7,-403.388 19685.8,-387.631"/>
<polygon fill="#0d317d" stroke="#0d317d" stroke-width="0.5" points="19686,-388.829 19689.3,-387.084 19685.7,-386.408 19686,-388.829"/>
<text text-anchor="middle" x="19467.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d317d">8.14%</text>
<text text-anchor="middle" x="19467.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d317d">17417×</text>
</g>
<!-- __gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long) -->
<g id="node35" class="node"><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long)</title>
<polygon fill="#0d1976" stroke="#0d1976" points="15906.5,-763 15601.5,-763 15601.5,-700 15906.5,-700 15906.5,-763"/>
<text text-anchor="middle" x="15754" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15754" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long)</text>
<text text-anchor="middle" x="15754" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">2.84%</text>
<text text-anchor="middle" x="15754" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.32%)</text>
<text text-anchor="middle" x="15754" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">8507×</text>
</g>
<!-- __gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long)&#45;&gt;operator delete(void*) -->
<g id="edge22" class="edge"><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long)&#45;&gt;operator delete(void*)</title>
<path fill="none" stroke="#0d1776" stroke-width="0.5" d="M15906.7,-720.522C16024.5,-713.311 16191.5,-704.14 16338,-700 16801.2,-686.914 17959.7,-699.835 18423,-691 19250.9,-675.211 19457.2,-647.119 20285,-628 20446.7,-624.264 20851.5,-629.298 21013,-619 21084.5,-614.438 21166.5,-604.183 21219.8,-596.823"/>
<polygon fill="#0d1776" stroke="#0d1776" stroke-width="0.5" points="21220,-598.035 21223.3,-596.342 21219.7,-595.608 21220,-598.035"/>
<text text-anchor="middle" x="20299" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d1776">2.52%</text>
<text text-anchor="middle" x="20299" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d1776">8507×</text>
</g>
<!-- operator delete(void*)&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge72" class="edge"><title>operator delete(void*)&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d1776" stroke-width="0.5" d="M21289.3,-619.374C21290.3,-622.268 21291.2,-625.175 21292,-628 21304.5,-672.614 21311,-684.168 21311,-730.5 21311,-1041.5 21311,-1041.5 21311,-1041.5 21311,-1275.75 21026.7,-1117.04 20794,-1144 20586.8,-1168.01 19944.3,-1179.39 19733.1,-1182.55"/>
<polygon fill="#0d1776" stroke="#0d1776" stroke-width="0.5" points="19732.8,-1181.33 19729.4,-1182.61 19732.9,-1183.78 19732.8,-1181.33"/>
<text text-anchor="middle" x="21325" y="-889" font-family="Arial" font-size="10.00" fill="#0d1776">2.37%</text>
<text text-anchor="middle" x="21325" y="-878" font-family="Arial" font-size="10.00" fill="#0d1776">1×</text>
</g>
<!-- free -->
<g id="node78" class="node"><title>free</title>
<polygon fill="#0d2379" stroke="#0d2379" points="21310.5,-516 21243.5,-516 21243.5,-453 21310.5,-453 21310.5,-516"/>
<text text-anchor="middle" x="21277" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="21277" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">free</text>
<text text-anchor="middle" x="21277" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">5.12%</text>
<text text-anchor="middle" x="21277" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(1.32%)</text>
<text text-anchor="middle" x="21277" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">17422×</text>
</g>
<!-- operator delete(void*)&#45;&gt;free -->
<g id="edge73" class="edge"><title>operator delete(void*)&#45;&gt;free</title>
<path fill="none" stroke="#0d2379" stroke-width="0.5" d="M21277,-555.923C21277,-544.557 21277,-531.589 21277,-519.904"/>
<polygon fill="#0d2379" stroke="#0d2379" stroke-width="0.5" points="21278.2,-519.822 21277,-516.322 21275.8,-519.822 21278.2,-519.822"/>
<text text-anchor="middle" x="21293.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d2379">5.12%</text>
<text text-anchor="middle" x="21293.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d2379">17416×</text>
</g>
<!-- _dl_addr -->
<g id="node37" class="node"><title>_dl_addr</title>
<polygon fill="#0d2b7c" stroke="#0d2b7c" points="21333.5,-63 21266.5,-63 21266.5,-0 21333.5,-0 21333.5,-63"/>
<text text-anchor="middle" x="21300" y="-51" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="21300" y="-40" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_addr</text>
<text text-anchor="middle" x="21300" y="-29" font-family="Arial" font-size="10.00" fill="#ffffff">6.92%</text>
<text text-anchor="middle" x="21300" y="-18" font-family="Arial" font-size="10.00" fill="#ffffff">(0.16%)</text>
<text text-anchor="middle" x="21300" y="-7" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- _dl_addr&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge23" class="edge"><title>_dl_addr&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d2b7b" stroke-width="0.5" d="M21323.9,-63.4036C21336.4,-82.5145 21349,-108.164 21349,-133.5 21349,-1041.5 21349,-1041.5 21349,-1041.5 21349,-1179.04 21193,-1123.61 21057,-1144 20797.1,-1182.96 19974.5,-1184.23 19732.6,-1183.73"/>
<polygon fill="#0d2b7b" stroke="#0d2b7b" stroke-width="0.5" points="19732.5,-1182.51 19729,-1183.73 19732.5,-1184.96 19732.5,-1182.51"/>
<text text-anchor="middle" x="21363" y="-590.5" font-family="Arial" font-size="10.00" fill="#0d2b7b">6.76%</text>
<text text-anchor="middle" x="21363" y="-579.5" font-family="Arial" font-size="10.00" fill="#0d2b7b">1×</text>
</g>
<!-- _dl_lookup_symbol_x -->
<g id="node39" class="node"><title>_dl_lookup_symbol_x</title>
<polygon fill="#0d387f" stroke="#0d387f" points="20487,-969 20377,-969 20377,-906 20487,-906 20487,-969"/>
<text text-anchor="middle" x="20432" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="20432" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_lookup_symbol_x</text>
<text text-anchor="middle" x="20432" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">9.47%</text>
<text text-anchor="middle" x="20432" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(2.90%)</text>
<text text-anchor="middle" x="20432" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">2265×</text>
</g>
<!-- _dl_fixup&#45;&gt;_dl_lookup_symbol_x -->
<g id="edge24" class="edge"><title>_dl_fixup&#45;&gt;_dl_lookup_symbol_x</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M20419.4,-1008.92C20421.5,-997.557 20423.8,-984.589 20425.9,-972.904"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="20427.1,-972.983 20426.5,-969.322 20424.7,-972.553 20427.1,-972.983"/>
<text text-anchor="middle" x="20439" y="-992" font-family="Arial" font-size="10.00" fill="#0d2179">4.78%</text>
<text text-anchor="middle" x="20439" y="-981" font-family="Arial" font-size="10.00" fill="#0d2179">242×</text>
</g>
<!-- do_lookup_x -->
<g id="node40" class="node"><title>do_lookup_x</title>
<polygon fill="#0d2a7b" stroke="#0d2a7b" points="20881.5,-866 20810.5,-866 20810.5,-803 20881.5,-803 20881.5,-866"/>
<text text-anchor="middle" x="20846" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="20846" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">do_lookup_x</text>
<text text-anchor="middle" x="20846" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">6.57%</text>
<text text-anchor="middle" x="20846" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(1.81%)</text>
<text text-anchor="middle" x="20846" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">2265×</text>
</g>
<!-- _dl_lookup_symbol_x&#45;&gt;do_lookup_x -->
<g id="edge25" class="edge"><title>_dl_lookup_symbol_x&#45;&gt;do_lookup_x</title>
<path fill="none" stroke="#0d2a7b" stroke-width="0.5" d="M20421.9,-905.933C20420.3,-894.82 20421.2,-883.031 20429,-875 20443.6,-860.01 20786.2,-872.94 20806,-866 20806.4,-865.87 20806.7,-865.735 20807.1,-865.595"/>
<polygon fill="#0d2a7b" stroke="#0d2a7b" stroke-width="0.5" points="20807.7,-866.696 20810.4,-864.219 20806.7,-864.435 20807.7,-866.696"/>
<text text-anchor="middle" x="20443" y="-889" font-family="Arial" font-size="10.00" fill="#0d2a7b">6.57%</text>
<text text-anchor="middle" x="20443" y="-878" font-family="Arial" font-size="10.00" fill="#0d2a7b">2265×</text>
</g>
<!-- calloc -->
<g id="node66" class="node"><title>calloc</title>
<polygon fill="#0d1e78" stroke="#0d1e78" points="20477.5,-691 20418.5,-691 20418.5,-628 20477.5,-628 20477.5,-691"/>
<text text-anchor="middle" x="20448" y="-679" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="20448" y="-668" font-family="Arial" font-size="10.00" fill="#ffffff">calloc</text>
<text text-anchor="middle" x="20448" y="-657" font-family="Arial" font-size="10.00" fill="#ffffff">4.08%</text>
<text text-anchor="middle" x="20448" y="-646" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="20448" y="-635" font-family="Arial" font-size="10.00" fill="#ffffff">17×</text>
</g>
<!-- do_lookup_x&#45;&gt;calloc -->
<g id="edge63" class="edge"><title>do_lookup_x&#45;&gt;calloc</title>
<path fill="none" stroke="#0d1e78" stroke-width="0.5" d="M20810.1,-805.439C20808.7,-804.591 20807.4,-803.774 20806,-803 20693,-739.055 20545.7,-690.182 20480.9,-670.267"/>
<polygon fill="#0d1e78" stroke="#0d1e78" stroke-width="0.5" points="20481.2,-669.081 20477.5,-669.226 20480.5,-671.424 20481.2,-669.081"/>
<text text-anchor="middle" x="20801" y="-786" font-family="Arial" font-size="10.00" fill="#0d1e78">4.08%</text>
<text text-anchor="middle" x="20801" y="-775" font-family="Arial" font-size="10.00" fill="#0d1e78">3×</text>
</g>
<!-- check_match -->
<g id="node77" class="node"><title>check_match</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="20883.5,-763 20808.5,-763 20808.5,-700 20883.5,-700 20883.5,-763"/>
<text text-anchor="middle" x="20846" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="20846" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">check_match</text>
<text text-anchor="middle" x="20846" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="20846" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.35%)</text>
<text text-anchor="middle" x="20846" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">2250×</text>
</g>
<!-- do_lookup_x&#45;&gt;check_match -->
<g id="edge64" class="edge"><title>do_lookup_x&#45;&gt;check_match</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M20846,-802.923C20846,-791.557 20846,-778.589 20846,-766.904"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="20847.2,-766.822 20846,-763.322 20844.8,-766.822 20847.2,-766.822"/>
<text text-anchor="middle" x="20860" y="-786" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="20860" y="-775" font-family="Arial" font-size="10.00" fill="#0d0f73">2250×</text>
</g>
<!-- _dl_relocate_object -->
<g id="node41" class="node"><title>_dl_relocate_object</title>
<polygon fill="#0d267a" stroke="#0d267a" points="20432.5,-3224 20331.5,-3224 20331.5,-3161 20432.5,-3161 20432.5,-3224"/>
<text text-anchor="middle" x="20382" y="-3212" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="20382" y="-3201" font-family="Arial" font-size="10.00" fill="#ffffff">_dl_relocate_object</text>
<text text-anchor="middle" x="20382" y="-3190" font-family="Arial" font-size="10.00" fill="#ffffff">5.67%</text>
<text text-anchor="middle" x="20382" y="-3179" font-family="Arial" font-size="10.00" fill="#ffffff">(0.98%)</text>
<text text-anchor="middle" x="20382" y="-3168" font-family="Arial" font-size="10.00" fill="#ffffff">7×</text>
</g>
<!-- _dl_relocate_object&#45;&gt;_dl_lookup_symbol_x -->
<g id="edge26" class="edge"><title>_dl_relocate_object&#45;&gt;_dl_lookup_symbol_x</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M20432.9,-3172.24C20473.6,-3153.12 20524,-3119.48 20524,-3070 20524,-3070 20524,-3070 20524,-1183.5 20524,-1103.86 20480.9,-1018.41 20453.7,-972.451"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="20454.6,-971.591 20451.7,-969.21 20452.5,-972.844 20454.6,-971.591"/>
<text text-anchor="middle" x="20538" y="-2104" font-family="Arial" font-size="10.00" fill="#0d2179">4.69%</text>
<text text-anchor="middle" x="20538" y="-2093" font-family="Arial" font-size="10.00" fill="#0d2179">2023×</text>
</g>
<!-- _dl_runtime_resolve_avx&#45;&gt;(below main) -->
<g id="edge27" class="edge"><title>_dl_runtime_resolve_avx&#45;&gt;(below main)</title>
<path fill="none" stroke="#f63c01" stroke-width="3.76" d="M15884,-3438.92C15884,-3429.52 15884,-3419.01 15884,-3409.05"/>
<polygon fill="#f63c01" stroke="#f63c01" stroke-width="3.76" points="15887.4,-3409.02 15884,-3399.32 15880.6,-3409.02 15887.4,-3409.02"/>
<text text-anchor="middle" x="15901" y="-3422" font-family="Arial" font-size="10.00" fill="#f63c01">93.97%</text>
<text text-anchor="middle" x="15901" y="-3411" font-family="Arial" font-size="10.00" fill="#f63c01">1×</text>
</g>
<!-- _dl_runtime_resolve_avx&#45;&gt;malloc -->
<g id="edge28" class="edge"><title>_dl_runtime_resolve_avx&#45;&gt;malloc</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M15822.6,-3469.52C14763,-3469.85 344,-3472.45 344,-3368.5 344,-3368.5 344,-3368.5 344,-483.5 344,-398.852 447.638,-459.955 532,-453 1050.09,-410.289 18811.2,-383.826 19685.6,-382.548"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="19685.9,-383.773 19689.4,-382.543 19685.9,-381.323 19685.9,-383.773"/>
<text text-anchor="middle" x="358" y="-1949.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.17%</text>
<text text-anchor="middle" x="358" y="-1938.5" font-family="Arial" font-size="10.00" fill="#0d0d73">1×</text>
</g>
<!-- _int_malloc -->
<g id="node55" class="node"><title>_int_malloc</title>
<polygon fill="#0d1a77" stroke="#0d1a77" points="19752.5,-269 19685.5,-269 19685.5,-206 19752.5,-206 19752.5,-269"/>
<text text-anchor="middle" x="19719" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="19719" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">_int_malloc</text>
<text text-anchor="middle" x="19719" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">3.14%</text>
<text text-anchor="middle" x="19719" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(3.12%)</text>
<text text-anchor="middle" x="19719" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">17421×</text>
</g>
<!-- malloc&#45;&gt;_int_malloc -->
<g id="edge69" class="edge"><title>malloc&#45;&gt;_int_malloc</title>
<path fill="none" stroke="#0d1a77" stroke-width="0.5" d="M19719,-349.688C19719,-327.079 19719,-296.364 19719,-272.945"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width="0.5" points="19720.2,-272.752 19719,-269.252 19717.8,-272.752 19720.2,-272.752"/>
<text text-anchor="middle" x="19735.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1a77">3.14%</text>
<text text-anchor="middle" x="19735.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1a77">17420×</text>
</g>
<!-- malloc_hook_ini -->
<g id="node80" class="node"><title>malloc_hook_ini</title>
<polygon fill="#0d2b7c" stroke="#0d2b7c" points="20663,-269 20577,-269 20577,-206 20663,-206 20663,-269"/>
<text text-anchor="middle" x="20620" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="20620" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">malloc_hook_ini</text>
<text text-anchor="middle" x="20620" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">6.92%</text>
<text text-anchor="middle" x="20620" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="20620" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- malloc&#45;&gt;malloc_hook_ini -->
<g id="edge70" class="edge"><title>malloc&#45;&gt;malloc_hook_ini</title>
<path fill="none" stroke="#0d2b7c" stroke-width="0.5" d="M19748.7,-375.816C19880.4,-355.068 20411.5,-271.354 20573.1,-245.887"/>
<polygon fill="#0d2b7c" stroke="#0d2b7c" stroke-width="0.5" points="20573.6,-247.051 20576.9,-245.296 20573.2,-244.631 20573.6,-247.051"/>
<text text-anchor="middle" x="20368" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d2b7c">6.92%</text>
<text text-anchor="middle" x="20368" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d2b7c">1×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge97" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M18959.8,-1072.05C18965.8,-1074.81 18970.6,-1077.78 18974,-1081 18994.9,-1100.92 18967.5,-1125.93 18990,-1144 19003.2,-1154.6 19278.1,-1152.05 19295,-1153 19400.8,-1158.92 19523.3,-1169.81 19597.4,-1176.85"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="19597.3,-1178.07 19600.9,-1177.18 19597.5,-1175.63 19597.3,-1178.07"/>
<text text-anchor="middle" x="19004" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.26%</text>
<text text-anchor="middle" x="19004" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0e73">1×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;)&#45;&gt;__dynamic_cast -->
<g id="edge98" class="edge"><title>std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;)&#45;&gt;__dynamic_cast</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M18079.9,-1008.99C18159.8,-989.775 18258.8,-965.953 18318.9,-951.505"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="18319.3,-952.663 18322.5,-950.653 18318.8,-950.281 18319.3,-952.663"/>
<text text-anchor="middle" x="18215" y="-992" font-family="Arial" font-size="10.00" fill="#0d1876">2.70%</text>
<text text-anchor="middle" x="18215" y="-981" font-family="Arial" font-size="10.00" fill="#0d1876">8415×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge99" class="edge"><title>std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d1f78" stroke-width="0.5" d="M20990.1,-866.157C20956.6,-877.979 20918.3,-892.012 20884,-906 20711.4,-976.348 20656.8,-975.757 20503,-1081 20469.8,-1103.72 20474.9,-1127.95 20438,-1144 20374.3,-1171.71 19909.5,-1180.42 19732.9,-1182.75"/>
<polygon fill="#0d1f78" stroke="#0d1f78" stroke-width="0.5" points="19732.7,-1181.53 19729.3,-1182.8 19732.8,-1183.98 19732.7,-1181.53"/>
<text text-anchor="middle" x="20698" y="-986.5" font-family="Arial" font-size="10.00" fill="#0d1f78">1×</text>
</g>
<!-- strxfrm_l -->
<g id="node104" class="node"><title>strxfrm_l</title>
<polygon fill="#0d1e78" stroke="#0d1e78" points="20998.5,-763 20931.5,-763 20931.5,-700 20998.5,-700 20998.5,-763"/>
<text text-anchor="middle" x="20965" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="20965" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">strxfrm_l</text>
<text text-anchor="middle" x="20965" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">4.02%</text>
<text text-anchor="middle" x="20965" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.96%)</text>
<text text-anchor="middle" x="20965" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const&#45;&gt;strxfrm_l -->
<g id="edge100" class="edge"><title>std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const&#45;&gt;strxfrm_l</title>
<path fill="none" stroke="#0d1e78" stroke-width="0.5" d="M21045.9,-802.923C21031.9,-790.73 21015.8,-776.692 21001.6,-764.374"/>
<polygon fill="#0d1e78" stroke="#0d1e78" stroke-width="0.5" points="21002.2,-763.308 20998.8,-761.934 21000.6,-765.156 21002.2,-763.308"/>
<text text-anchor="middle" x="21048" y="-786" font-family="Arial" font-size="10.00" fill="#0d1e78">4.02%</text>
<text text-anchor="middle" x="21048" y="-775" font-family="Arial" font-size="10.00" fill="#0d1e78">8447×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const -->
<g id="node105" class="node"><title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const</title>
<polygon fill="#0c5b88" stroke="#0c5b88" points="20349,-969 20011,-969 20011,-906 20349,-906 20349,-969"/>
<text text-anchor="middle" x="20180" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.21</text>
<text text-anchor="middle" x="20180" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const</text>
<text text-anchor="middle" x="20180" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">16.03%</text>
<text text-anchor="middle" x="20180" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(1.96%)</text>
<text text-anchor="middle" x="20180" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const&#45;&gt;std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const -->
<g id="edge106" class="edge"><title>std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const&#45;&gt;std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const</title>
<path fill="none" stroke="#0c5b88" stroke-width="0.64" d="M19719.5,-1008.88C19742.5,-997.336 19769.9,-985.256 19796,-978 19863.5,-959.279 19939.8,-949.26 20006.5,-943.957"/>
<polygon fill="#0c5b88" stroke="#0c5b88" stroke-width="0.64" points="20007,-945.322 20010.9,-943.614 20006.8,-942.531 20007,-945.322"/>
<text text-anchor="middle" x="19813" y="-992" font-family="Arial" font-size="10.00" fill="#0c5b88">16.03%</text>
<text text-anchor="middle" x="19813" y="-981" font-family="Arial" font-size="10.00" fill="#0c5b88">8415×</text>
</g>
<!-- boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int) -->
<g id="node65" class="node"><title>boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="19495,-969 19075,-969 19075,-906 19495,-906 19495,-969"/>
<text text-anchor="middle" x="19285" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="19285" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</text>
<text text-anchor="middle" x="19285" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">0.57%</text>
<text text-anchor="middle" x="19285" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="19285" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">4×</text>
</g>
<!-- std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)&#45;&gt;boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int) -->
<g id="edge150" class="edge"><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)&#45;&gt;boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19285,-1008.92C19285,-997.557 19285,-984.589 19285,-972.904"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="19286.2,-972.822 19285,-969.322 19283.8,-972.822 19286.2,-972.822"/>
<text text-anchor="middle" x="19299" y="-992" font-family="Arial" font-size="10.00" fill="#0d0f73">0.57%</text>
<text text-anchor="middle" x="19299" y="-981" font-family="Arial" font-size="10.00" fill="#0d0f73">4×</text>
</g>
<!-- std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)&#45;&gt;__dynamic_cast -->
<g id="edge153" class="edge"><title>std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)&#45;&gt;__dynamic_cast</title>
<path fill="none" stroke="#0d2f7c" stroke-width="0.5" d="M18373,-1008.92C18373,-997.557 18373,-984.589 18373,-972.904"/>
<polygon fill="#0d2f7c" stroke="#0d2f7c" stroke-width="0.5" points="18374.2,-972.822 18373,-969.322 18371.8,-972.822 18374.2,-972.822"/>
<text text-anchor="middle" x="18389.5" y="-992" font-family="Arial" font-size="10.00" fill="#0d2f7c">7.59%</text>
<text text-anchor="middle" x="18389.5" y="-981" font-family="Arial" font-size="10.00" fill="#0d2f7c">16893×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge178" class="edge"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d1776" stroke-width="0.5" d="M18588.3,-749.053C18673.4,-755.115 18752.8,-762.792 18794,-772 18831.6,-780.413 18848.7,-774.856 18875,-803 18904.9,-834.923 18870.5,-868.903 18904,-897 18928.7,-917.725 18948.2,-889.635 18976,-906 19005.9,-923.593 19000,-942.23 19022,-969 19037.4,-987.699 19048.1,-987.391 19059,-1009 19072.8,-1036.26 19061.9,-1124.04 19085,-1144 19093.7,-1151.52 19280.5,-1152.28 19292,-1153 19398.8,-1159.68 19522.5,-1170.38 19597.2,-1177.17"/>
<polygon fill="#0d1776" stroke="#0d1776" stroke-width="0.5" points="19597.1,-1178.4 19600.7,-1177.49 19597.3,-1175.96 19597.1,-1178.4"/>
<text text-anchor="middle" x="19036" y="-940.5" font-family="Arial" font-size="10.00" fill="#0d1776">2.55%</text>
<text text-anchor="middle" x="19036" y="-929.5" font-family="Arial" font-size="10.00" fill="#0d1776">6×</text>
</g>
<!-- std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*) -->
<g id="node143" class="node"><title>std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*)</title>
<polygon fill="#0d1575" stroke="#0d1575" points="14217,-619 13867,-619 13867,-556 14217,-556 14217,-619"/>
<text text-anchor="middle" x="14042" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="14042" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*)</text>
<text text-anchor="middle" x="14042" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">2.01%</text>
<text text-anchor="middle" x="14042" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(1.28%)</text>
<text text-anchor="middle" x="14042" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">16895×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*) -->
<g id="edge179" class="edge"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M17941.9,-719.637C17101.9,-691.389 14869.1,-616.311 14220.8,-594.513"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="14220.6,-593.279 14217,-594.385 14220.5,-595.727 14220.6,-593.279"/>
<text text-anchor="middle" x="17032" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.01%</text>
<text text-anchor="middle" x="17032" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d1174">8480×</text>
</g>
<!-- dl_main -->
<g id="node53" class="node"><title>dl_main</title>
<polygon fill="#0d267a" stroke="#0d267a" points="17018.5,-3399 16959.5,-3399 16959.5,-3336 17018.5,-3336 17018.5,-3399"/>
<text text-anchor="middle" x="16989" y="-3387" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.23.so</text>
<text text-anchor="middle" x="16989" y="-3376" font-family="Arial" font-size="10.00" fill="#ffffff">dl_main</text>
<text text-anchor="middle" x="16989" y="-3365" font-family="Arial" font-size="10.00" fill="#ffffff">5.83%</text>
<text text-anchor="middle" x="16989" y="-3354" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="16989" y="-3343" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- _dl_sysdep_start&#45;&gt;dl_main -->
<g id="edge42" class="edge"><title>_dl_sysdep_start&#45;&gt;dl_main</title>
<path fill="none" stroke="#0d267a" stroke-width="0.5" d="M16186.6,-3464.07C16338.2,-3446.01 16823.2,-3388.25 16955.4,-3372.5"/>
<polygon fill="#0d267a" stroke="#0d267a" stroke-width="0.5" points="16955.9,-3373.68 16959.2,-3372.04 16955.6,-3371.24 16955.9,-3373.68"/>
<text text-anchor="middle" x="16655" y="-3422" font-family="Arial" font-size="10.00" fill="#0d267a">5.83%</text>
<text text-anchor="middle" x="16655" y="-3411" font-family="Arial" font-size="10.00" fill="#0d267a">1×</text>
</g>
<!-- dl_main&#45;&gt;_dl_relocate_object -->
<g id="edge62" class="edge"><title>dl_main&#45;&gt;_dl_relocate_object</title>
<path fill="none" stroke="#0d267a" stroke-width="0.5" d="M17018.6,-3364.99C17325.2,-3349.36 19919.3,-3217.09 20327.9,-3196.26"/>
<polygon fill="#0d267a" stroke="#0d267a" stroke-width="0.5" points="20328,-3197.48 20331.5,-3196.08 20327.9,-3195.03 20328,-3197.48"/>
<text text-anchor="middle" x="18198" y="-3319" font-family="Arial" font-size="10.00" fill="#0d267a">5.67%</text>
<text text-anchor="middle" x="18198" y="-3308" font-family="Arial" font-size="10.00" fill="#0d267a">7×</text>
</g>
<!-- _int_free -->
<g id="node54" class="node"><title>_int_free</title>
<polygon fill="#0d1d78" stroke="#0d1d78" points="21310.5,-413 21243.5,-413 21243.5,-350 21310.5,-350 21310.5,-413"/>
<text text-anchor="middle" x="21277" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="21277" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">_int_free</text>
<text text-anchor="middle" x="21277" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">3.80%</text>
<text text-anchor="middle" x="21277" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(3.77%)</text>
<text text-anchor="middle" x="21277" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">17419×</text>
</g>
<!-- bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) -->
<g id="node56" class="node"><title>bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="16673.5,-1144 15478.5,-1144 15478.5,-1081 16673.5,-1081 16673.5,-1144"/>
<text text-anchor="middle" x="16076" y="-1132" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16076" y="-1121" font-family="Arial" font-size="10.00" fill="#ffffff">bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="16076" y="-1110" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="16076" y="-1099" font-family="Arial" font-size="10.00" fill="#ffffff">(0.49%)</text>
<text text-anchor="middle" x="16076" y="-1088" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const -->
<g id="edge44" class="edge"><title>bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::base() const</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M16673.9,-1081.12C16674.9,-1081.08 16676,-1081.04 16677,-1081 16686.9,-1080.62 17024.7,-1078.63 17032,-1072 17059.2,-1047.31 17042,-1026.71 17042,-990 17042,-990 17042,-990 17042,-833.5 17042,-777.713 16915.3,-752.606 16792.6,-741.371"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="16792.6,-740.138 16789,-741.042 16792.4,-742.578 16792.6,-740.138"/>
<text text-anchor="middle" x="17058.5" y="-940.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.29%</text>
<text text-anchor="middle" x="17058.5" y="-929.5" font-family="Arial" font-size="10.00" fill="#0d0e73">16896×</text>
</g>
<!-- bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) -->
<g id="node57" class="node"><title>bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="7568,-1288 3446,-1288 3446,-1225 7568,-1225 7568,-1288"/>
<text text-anchor="middle" x="5507" y="-1276" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="5507" y="-1265" font-family="Arial" font-size="10.00" fill="#ffffff">bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="5507" y="-1254" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="5507" y="-1243" font-family="Arial" font-size="10.00" fill="#ffffff">(0.49%)</text>
<text text-anchor="middle" x="5507" y="-1232" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const -->
<g id="edge45" class="edge"><title>bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base() const</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M4580.55,-1224.96C4564.66,-1222.22 4554.4,-1219.24 4551,-1216 4517.92,-1184.42 4542,-1159.23 4542,-1113.5 4542,-1113.5 4542,-1113.5 4542,-936.5 4542,-898.715 4873.98,-873.723 5212.99,-858.052"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="5213.54,-859.253 5216.98,-857.868 5213.43,-856.806 5213.54,-859.253"/>
<text text-anchor="middle" x="4558.5" y="-1043.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.30%</text>
<text text-anchor="middle" x="4558.5" y="-1032.5" font-family="Arial" font-size="10.00" fill="#0d0e73">16940×</text>
</g>
<!-- bool __gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;) -->
<g id="node58" class="node"><title>bool __gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="6591.5,-1360 3700.5,-1360 3700.5,-1297 6591.5,-1297 6591.5,-1360"/>
<text text-anchor="middle" x="5146" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="5146" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">bool __gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="5146" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="5146" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.49%)</text>
<text text-anchor="middle" x="5146" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- bool __gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;) -->
<g id="node59" class="node"><title>bool __gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="8447.5,-1360 6600.5,-1360 6600.5,-1297 8447.5,-1297 8447.5,-1360"/>
<text text-anchor="middle" x="7524" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7524" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">bool __gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="7524" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.29%</text>
<text text-anchor="middle" x="7524" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.81%)</text>
<text text-anchor="middle" x="7524" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">13915×</text>
</g>
<!-- bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="node60" class="node"><title>bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="12388,-2637 7496,-2637 7496,-2574 12388,-2574 12388,-2637"/>
<text text-anchor="middle" x="9942" y="-2625" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9942" y="-2614" font-family="Arial" font-size="10.00" fill="#ffffff">bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</text>
<text text-anchor="middle" x="9942" y="-2603" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="9942" y="-2592" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="9942" y="-2581" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) -->
<g id="node61" class="node"><title>bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)</title>
<polygon fill="#0d2c7c" stroke="#0d2c7c" points="16731,-1360 15397,-1360 15397,-1297 16731,-1297 16731,-1360"/>
<text text-anchor="middle" x="16064" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16064" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)</text>
<text text-anchor="middle" x="16064" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">7.14%</text>
<text text-anchor="middle" x="16064" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.99%)</text>
<text text-anchor="middle" x="16064" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val) -->
<g id="edge46" class="edge"><title>bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char, __gnu_cxx::__ops::_Iter_less_val&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;, __gnu_cxx::__ops::_Iter_less_val)</title>
<path fill="none" stroke="#0d2379" stroke-width="0.5" d="M15929.5,-1296.96C15823.9,-1274 15672.7,-1243.45 15539,-1225 15516.8,-1221.94 15494,-1219.08 15471,-1216.43"/>
<polygon fill="#0d2379" stroke="#0d2379" stroke-width="0.5" points="15470.9,-1215.19 15467.2,-1216.01 15470.6,-1217.62 15470.9,-1215.19"/>
<text text-anchor="middle" x="15892" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d2379">5.15%</text>
<text text-anchor="middle" x="15892" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d2379">8448×</text>
</g>
<!-- bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)&#45;&gt;bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) -->
<g id="edge47" class="edge"><title>bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)&#45;&gt;bool __gnu_cxx::operator!=&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M16065.7,-1296.84C16067.9,-1257.43 16071.8,-1189.19 16074.1,-1148"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="16075.3,-1147.67 16074.3,-1144.1 16072.9,-1147.53 16075.3,-1147.67"/>
<text text-anchor="middle" x="16084" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.79%</text>
<text text-anchor="middle" x="16084" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d1074">8448×</text>
</g>
<!-- bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="node62" class="node"><title>bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="11098.5,-2843 8647.5,-2843 8647.5,-2780 11098.5,-2780 11098.5,-2843"/>
<text text-anchor="middle" x="9873" y="-2831" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9873" y="-2820" font-family="Arial" font-size="10.00" fill="#ffffff">bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</text>
<text text-anchor="middle" x="9873" y="-2809" font-family="Arial" font-size="10.00" fill="#ffffff">0.58%</text>
<text text-anchor="middle" x="9873" y="-2798" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="9873" y="-2787" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="node63" class="node"><title>bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="12189,-2740 7557,-2740 7557,-2677 12189,-2677 12189,-2740"/>
<text text-anchor="middle" x="9873" y="-2728" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9873" y="-2717" font-family="Arial" font-size="10.00" fill="#ffffff">bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</text>
<text text-anchor="middle" x="9873" y="-2706" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="9873" y="-2695" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="9873" y="-2684" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)&#45;&gt;bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="edge48" class="edge"><title>bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)&#45;&gt;bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M9873,-2779.92C9873,-2768.56 9873,-2755.59 9873,-2743.9"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="9874.23,-2743.82 9873,-2740.32 9871.78,-2743.82 9874.23,-2743.82"/>
<text text-anchor="middle" x="9887" y="-2763" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="9887" y="-2752" font-family="Arial" font-size="10.00" fill="#0d0f73">11×</text>
</g>
<!-- bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)&#45;&gt;bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="edge49" class="edge"><title>bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)&#45;&gt;bool std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::match_results&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M9893.89,-2676.92C9901.79,-2665.36 9910.82,-2652.14 9918.91,-2640.3"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="9919.98,-2640.9 9920.94,-2637.32 9917.96,-2639.52 9919.98,-2640.9"/>
<text text-anchor="middle" x="9928" y="-2660" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="9928" y="-2649" font-family="Arial" font-size="10.00" fill="#0d0f73">11×</text>
</g>
<!-- bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)&#45;&gt;bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type) -->
<g id="edge50" class="edge"><title>bool std::regex_match&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)&#45;&gt;bool std::regex_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;, std::regex_constants::match_flag_type)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M9873,-2882.92C9873,-2871.56 9873,-2858.59 9873,-2846.9"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="9874.23,-2846.82 9873,-2843.32 9871.78,-2846.82 9874.23,-2846.82"/>
<text text-anchor="middle" x="9887" y="-2866" font-family="Arial" font-size="10.00" fill="#0d0f73">0.58%</text>
<text text-anchor="middle" x="9887" y="-2855" font-family="Arial" font-size="10.00" fill="#0d0f73">11×</text>
</g>
<!-- boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge52" class="edge"><title>boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19410.2,-969.045C19431.7,-978.909 19452.1,-991.904 19468,-1009 19487.9,-1030.44 19469.3,-1048.75 19487,-1072 19515.4,-1109.21 19560.1,-1137.14 19597.6,-1155.74"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="19597,-1156.85 19600.7,-1157.29 19598.1,-1154.65 19597,-1156.85"/>
<text text-anchor="middle" x="19493" y="-1038" font-family="Arial" font-size="10.00" fill="#0d0f73">5×</text>
</g>
<!-- boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)&#45;&gt;__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*) -->
<g id="edge51" class="edge"><title>boost::io::basic_altstringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)&#45;&gt;__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19099.8,-905.947C19033.2,-893.106 18971.9,-878.322 18962,-866 18930.7,-827.093 19006.3,-687.237 19044.5,-622.198"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="19045.6,-622.795 19046.3,-619.158 19043.5,-621.552 19045.6,-622.795"/>
<text text-anchor="middle" x="18985" y="-786" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="18985" y="-775" font-family="Arial" font-size="10.00" fill="#0d0f73">4×</text>
</g>
<!-- calloc&#45;&gt;malloc -->
<g id="edge53" class="edge"><title>calloc&#45;&gt;malloc</title>
<path fill="none" stroke="#0d1e78" stroke-width="0.5" d="M20418.8,-627.888C20395.5,-605.009 20360.8,-574.595 20325,-556 20122,-450.448 19846.4,-401.584 19752.2,-387.214"/>
<polygon fill="#0d1e78" stroke="#0d1e78" stroke-width="0.5" points="19752.3,-385.99 19748.6,-386.677 19751.9,-388.412 19752.3,-385.99"/>
<text text-anchor="middle" x="20319" y="-539" font-family="Arial" font-size="10.00" fill="#0d1e78">4.08%</text>
<text text-anchor="middle" x="20319" y="-528" font-family="Arial" font-size="10.00" fill="#0d1e78">17×</text>
</g>
<!-- char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*) -->
<g id="node67" class="node"><title>char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="956.5,-166 411.5,-166 411.5,-103 956.5,-103 956.5,-166"/>
<text text-anchor="middle" x="684" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="684" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*)</text>
<text text-anchor="middle" x="684" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">0.97%</text>
<text text-anchor="middle" x="684" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.62%)</text>
<text text-anchor="middle" x="684" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">8487×</text>
</g>
<!-- char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*) -->
<g id="node68" class="node"><title>char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)</title>
<polygon fill="#0d1a77" stroke="#0d1a77" points="515.5,-413 204.5,-413 204.5,-350 515.5,-350 515.5,-413"/>
<text text-anchor="middle" x="360" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="360" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)</text>
<text text-anchor="middle" x="360" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">3.11%</text>
<text text-anchor="middle" x="360" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.68%)</text>
<text text-anchor="middle" x="360" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*) -->
<g id="node69" class="node"><title>char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="837,-269 531,-269 531,-206 837,-206 837,-269"/>
<text text-anchor="middle" x="684" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="684" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*)</text>
<text text-anchor="middle" x="684" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">1.32%</text>
<text text-anchor="middle" x="684" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="684" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*) -->
<g id="edge54" class="edge"><title>char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*)</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M429.904,-349.863C483.346,-326.441 556.811,-294.243 611.006,-270.491"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="611.507,-271.609 614.221,-269.082 610.524,-269.365 611.507,-271.609"/>
<text text-anchor="middle" x="603" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.32%</text>
<text text-anchor="middle" x="603" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1274">8415×</text>
</g>
<!-- std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*) -->
<g id="node70" class="node"><title>std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="521.5,-269 198.5,-269 198.5,-206 521.5,-206 521.5,-269"/>
<text text-anchor="middle" x="360" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="360" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*)</text>
<text text-anchor="middle" x="360" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">1.11%</text>
<text text-anchor="middle" x="360" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.66%)</text>
<text text-anchor="middle" x="360" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">25416×</text>
</g>
<!-- char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)&#45;&gt;std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*) -->
<g id="edge55" class="edge"><title>char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)&#45;&gt;std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M360,-349.688C360,-327.079 360,-296.364 360,-272.945"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="361.225,-272.752 360,-269.252 358.775,-272.752 361.225,-272.752"/>
<text text-anchor="middle" x="376.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.10%</text>
<text text-anchor="middle" x="376.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1174">25245×</text>
</g>
<!-- char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*) -->
<g id="edge56" class="edge"><title>char* std::__copy_move_a&lt;false, char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt;(char const*, char const*, char*)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M684,-205.923C684,-194.557 684,-181.589 684,-169.904"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="685.225,-169.822 684,-166.322 682.775,-169.822 685.225,-169.822"/>
<text text-anchor="middle" x="698" y="-189" font-family="Arial" font-size="10.00" fill="#0d1174">0.95%</text>
<text text-anchor="middle" x="698" y="-178" font-family="Arial" font-size="10.00" fill="#0d1174">8415×</text>
</g>
<!-- std::_Iter_base&lt;char*, false&gt;::_S_base(char*) -->
<g id="node84" class="node"><title>std::_Iter_base&lt;char*, false&gt;::_S_base(char*)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="333.5,-166 118.5,-166 118.5,-103 333.5,-103 333.5,-166"/>
<text text-anchor="middle" x="226" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="226" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Iter_base&lt;char*, false&gt;::_S_base(char*)</text>
<text text-anchor="middle" x="226" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="226" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.74%)</text>
<text text-anchor="middle" x="226" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">42246×</text>
</g>
<!-- std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*)&#45;&gt;std::_Iter_base&lt;char*, false&gt;::_S_base(char*) -->
<g id="edge77" class="edge"><title>std::_Niter_base&lt;char*&gt;::iterator_type std::__niter_base&lt;char*&gt;(char*)&#45;&gt;std::_Iter_base&lt;char*, false&gt;::_S_base(char*)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M319.432,-205.923C303.833,-194.165 285.958,-180.692 270.047,-168.7"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="270.425,-167.451 266.893,-166.322 268.95,-169.407 270.425,-167.451"/>
<text text-anchor="middle" x="322.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f73">0.44%</text>
<text text-anchor="middle" x="322.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f73">25416×</text>
</g>
<!-- char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*) -->
<g id="node71" class="node"><title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*)</title>
<polygon fill="#0d2179" stroke="#0d2179" points="2543,-619 2151,-619 2151,-556 2543,-556 2543,-619"/>
<text text-anchor="middle" x="2347" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="2347" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*)</text>
<text text-anchor="middle" x="2347" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">4.77%</text>
<text text-anchor="middle" x="2347" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.34%)</text>
<text text-anchor="middle" x="2347" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- char* std::copy&lt;char*, char*&gt;(char*, char*, char*) -->
<g id="node72" class="node"><title>char* std::copy&lt;char*, char*&gt;(char*, char*, char*)</title>
<polygon fill="#0d2078" stroke="#0d2078" points="1361.5,-516 1130.5,-516 1130.5,-453 1361.5,-453 1361.5,-516"/>
<text text-anchor="middle" x="1246" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1246" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::copy&lt;char*, char*&gt;(char*, char*, char*)</text>
<text text-anchor="middle" x="1246" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">4.43%</text>
<text text-anchor="middle" x="1246" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="1246" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::copy&lt;char*, char*&gt;(char*, char*, char*) -->
<g id="edge57" class="edge"><title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::copy&lt;char*, char*&gt;(char*, char*, char*)</title>
<path fill="none" stroke="#0d2078" stroke-width="0.5" d="M2150.8,-568.501C1922.74,-547.58 1553.62,-513.719 1365.09,-496.425"/>
<polygon fill="#0d2078" stroke="#0d2078" stroke-width="0.5" points="1365.1,-495.195 1361.5,-496.095 1364.87,-497.635 1365.1,-495.195"/>
<text text-anchor="middle" x="1910" y="-539" font-family="Arial" font-size="10.00" fill="#0d2078">4.43%</text>
<text text-anchor="middle" x="1910" y="-528" font-family="Arial" font-size="10.00" fill="#0d2078">8415×</text>
</g>
<!-- char* std::copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*) -->
<g id="edge59" class="edge"><title>char* std::copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__copy_move_a2&lt;false, char*, char*&gt;(char*, char*, char*)</title>
<path fill="none" stroke="#0d1a77" stroke-width="0.5" d="M1130.48,-453.969C1128.64,-453.634 1126.82,-453.31 1125,-453 917.439,-417.497 674.926,-398.97 519.519,-389.984"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width="0.5" points="519.429,-388.752 515.864,-389.774 519.288,-391.198 519.429,-388.752"/>
<text text-anchor="middle" x="1078" y="-436" font-family="Arial" font-size="10.00" fill="#0d1a77">3.11%</text>
<text text-anchor="middle" x="1078" y="-425" font-family="Arial" font-size="10.00" fill="#0d1a77">8415×</text>
</g>
<!-- std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*) -->
<g id="node75" class="node"><title>std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="328,-341 0,-341 0,-278 328,-278 328,-341"/>
<text text-anchor="middle" x="164" y="-329" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="164" y="-318" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*)</text>
<text text-anchor="middle" x="164" y="-307" font-family="Arial" font-size="10.00" fill="#ffffff">0.73%</text>
<text text-anchor="middle" x="164" y="-296" font-family="Arial" font-size="10.00" fill="#ffffff">(0.44%)</text>
<text text-anchor="middle" x="164" y="-285" font-family="Arial" font-size="10.00" fill="#ffffff">16830×</text>
</g>
<!-- char* std::copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*) -->
<g id="edge60" class="edge"><title>char* std::copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M1130.18,-453.778C1128.44,-453.505 1126.72,-453.245 1125,-453 1018.01,-437.708 989.982,-448.454 882,-444 806.208,-440.874 260.879,-458.254 200,-413 178.879,-397.3 170.087,-368.263 166.459,-345.092"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="167.641,-344.711 165.92,-341.427 165.217,-345.068 167.641,-344.711"/>
<text text-anchor="middle" x="898.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1074">0.73%</text>
<text text-anchor="middle" x="898.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1074">16830×</text>
</g>
<!-- char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;) -->
<g id="node73" class="node"><title>char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;)</title>
<polygon fill="#0d257a" stroke="#0d257a" points="9848.5,-866 9415.5,-866 9415.5,-803 9848.5,-803 9848.5,-866"/>
<text text-anchor="middle" x="9632" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="9632" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;)</text>
<text text-anchor="middle" x="9632" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">5.50%</text>
<text text-anchor="middle" x="9632" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="9632" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*) -->
<g id="node74" class="node"><title>char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*)</title>
<polygon fill="#0d2379" stroke="#0d2379" points="4266.5,-763 3979.5,-763 3979.5,-700 4266.5,-700 4266.5,-763"/>
<text text-anchor="middle" x="4123" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="4123" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*)</text>
<text text-anchor="middle" x="4123" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">5.13%</text>
<text text-anchor="middle" x="4123" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="4123" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;)&#45;&gt;char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*) -->
<g id="edge58" class="edge"><title>char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;)&#45;&gt;char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*)</title>
<path fill="none" stroke="#0d2379" stroke-width="0.5" d="M9415.19,-829.525C8508.27,-812.898 5030.64,-749.14 4270.39,-735.202"/>
<polygon fill="#0d2379" stroke="#0d2379" stroke-width="0.5" points="4270.31,-733.976 4266.79,-735.136 4270.26,-736.425 4270.31,-733.976"/>
<text text-anchor="middle" x="7385" y="-786" font-family="Arial" font-size="10.00" fill="#0d2379">5.13%</text>
<text text-anchor="middle" x="7385" y="-775" font-family="Arial" font-size="10.00" fill="#0d2379">8415×</text>
</g>
<!-- char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*) -->
<g id="edge61" class="edge"><title>char* std::uninitialized_copy&lt;char*, char*&gt;(char*, char*, char*)&#45;&gt;char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt;(char*, char*, char*)</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M3979.17,-719C3663.35,-693.749 2908.69,-633.41 2546.98,-604.489"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="2546.86,-603.251 2543.27,-604.193 2546.66,-605.693 2546.86,-603.251"/>
<text text-anchor="middle" x="3613" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d2179">4.77%</text>
<text text-anchor="middle" x="3613" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d2179">8415×</text>
</g>
<!-- std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*)&#45;&gt;std::_Iter_base&lt;char*, false&gt;::_S_base(char*) -->
<g id="edge76" class="edge"><title>std::_Miter_base&lt;char*&gt;::iterator_type std::__miter_base&lt;char*&gt;(char*)&#45;&gt;std::_Iter_base&lt;char*, false&gt;::_S_base(char*)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M156.978,-277.829C153.631,-256.881 152.061,-228.884 161,-206 166.361,-192.277 175.784,-179.616 185.819,-168.924"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="186.845,-169.623 188.381,-166.248 185.076,-167.929 186.845,-169.623"/>
<text text-anchor="middle" x="177.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.29%</text>
<text text-anchor="middle" x="177.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0e73">16830×</text>
</g>
<!-- char* std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt;(char*) const -->
<g id="node76" class="node"><title>char* std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt;(char*) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="11688.5,-1072 11329.5,-1072 11329.5,-1009 11688.5,-1009 11688.5,-1072"/>
<text text-anchor="middle" x="11509" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="11509" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">char* std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt;(char*) const</text>
<text text-anchor="middle" x="11509" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.68%</text>
<text text-anchor="middle" x="11509" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.68%)</text>
<text text-anchor="middle" x="11509" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">33660×</text>
</g>
<!-- free&#45;&gt;_int_free -->
<g id="edge65" class="edge"><title>free&#45;&gt;_int_free</title>
<path fill="none" stroke="#0d1d78" stroke-width="0.5" d="M21277,-452.923C21277,-441.557 21277,-428.589 21277,-416.904"/>
<polygon fill="#0d1d78" stroke="#0d1d78" stroke-width="0.5" points="21278.2,-416.822 21277,-413.322 21275.8,-416.822 21278.2,-416.822"/>
<text text-anchor="middle" x="21293.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1d78">3.80%</text>
<text text-anchor="middle" x="21293.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1d78">17419×</text>
</g>
<!-- std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type) -->
<g id="node92" class="node"><title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)</title>
<polygon fill="#f15c02" stroke="#f15c02" points="7986,-2843 7252,-2843 7252,-2780 7986,-2780 7986,-2843"/>
<text text-anchor="middle" x="7619" y="-2831" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7619" y="-2820" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)</text>
<text text-anchor="middle" x="7619" y="-2809" font-family="Arial" font-size="10.00" fill="#ffffff">90.55%</text>
<text text-anchor="middle" x="7619" y="-2798" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="7619" y="-2787" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)&#45;&gt;std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type) -->
<g id="edge82" class="edge"><title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)&#45;&gt;std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)</title>
<path fill="none" stroke="#f15c02" stroke-width="3.62" d="M7991,-2882.99C7927.32,-2870.92 7854.06,-2857.04 7789.49,-2844.81"/>
<polygon fill="#f15c02" stroke="#f15c02" stroke-width="3.62" points="7789.98,-2841.51 7780.02,-2843.01 7788.74,-2848.05 7789.98,-2841.51"/>
<text text-anchor="middle" x="7951" y="-2866" font-family="Arial" font-size="10.00" fill="#f15c02">90.55%</text>
<text text-anchor="middle" x="7951" y="-2855" font-family="Arial" font-size="10.00" fill="#f15c02">11×</text>
</g>
<!-- ptmalloc_init.part.7 -->
<g id="node81" class="node"><title>ptmalloc_init.part.7</title>
<polygon fill="#0d2b7c" stroke="#0d2b7c" points="21239.5,-166 21140.5,-166 21140.5,-103 21239.5,-103 21239.5,-166"/>
<text text-anchor="middle" x="21190" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="21190" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">ptmalloc_init.part.7</text>
<text text-anchor="middle" x="21190" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">6.92%</text>
<text text-anchor="middle" x="21190" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="21190" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- malloc_hook_ini&#45;&gt;ptmalloc_init.part.7 -->
<g id="edge71" class="edge"><title>malloc_hook_ini&#45;&gt;ptmalloc_init.part.7</title>
<path fill="none" stroke="#0d2b7c" stroke-width="0.5" d="M20663.3,-228.826C20766.1,-210.61 21024.6,-164.806 21136.7,-144.938"/>
<polygon fill="#0d2b7c" stroke="#0d2b7c" stroke-width="0.5" points="21137.1,-146.117 21140.3,-144.3 21136.7,-143.705 21137.1,-146.117"/>
<text text-anchor="middle" x="20971" y="-189" font-family="Arial" font-size="10.00" fill="#0d2b7c">6.92%</text>
<text text-anchor="middle" x="20971" y="-178" font-family="Arial" font-size="10.00" fill="#0d2b7c">1×</text>
</g>
<!-- ptmalloc_init.part.7&#45;&gt;_dl_addr -->
<g id="edge75" class="edge"><title>ptmalloc_init.part.7&#45;&gt;_dl_addr</title>
<path fill="none" stroke="#0d2b7c" stroke-width="0.5" d="M21223.3,-102.923C21236.1,-91.1654 21250.8,-77.6923 21263.8,-65.6999"/>
<polygon fill="#0d2b7c" stroke="#0d2b7c" stroke-width="0.5" points="21264.7,-66.5916 21266.4,-63.3221 21263,-64.7869 21264.7,-66.5916"/>
<text text-anchor="middle" x="21269" y="-86" font-family="Arial" font-size="10.00" fill="#0d2b7c">6.92%</text>
<text text-anchor="middle" x="21269" y="-75" font-family="Arial" font-size="10.00" fill="#0d2b7c">1×</text>
</g>
<!-- std::_Base_bitset&lt;4ul&gt;::_S_maskbit(unsigned long) -->
<g id="node82" class="node"><title>std::_Base_bitset&lt;4ul&gt;::_S_maskbit(unsigned long)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="19797,-1360 19555,-1360 19555,-1297 19797,-1297 19797,-1360"/>
<text text-anchor="middle" x="19676" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="19676" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Base_bitset&lt;4ul&gt;::_S_maskbit(unsigned long)</text>
<text text-anchor="middle" x="19676" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.50%</text>
<text text-anchor="middle" x="19676" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.33%)</text>
<text text-anchor="middle" x="19676" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8629×</text>
</g>
<!-- std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) -->
<g id="node83" class="node"><title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="17008.5,-3708 16109.5,-3708 16109.5,-3645 17008.5,-3645 17008.5,-3708"/>
<text text-anchor="middle" x="16559" y="-3696" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16559" y="-3685" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)</text>
<text text-anchor="middle" x="16559" y="-3674" font-family="Arial" font-size="10.00" fill="#ffffff">0.64%</text>
<text text-anchor="middle" x="16559" y="-3663" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="16559" y="-3652" font-family="Arial" font-size="10.00" fill="#ffffff">143×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long) -->
<g id="node85" class="node"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long)</title>
<polygon fill="#0d1f78" stroke="#0d1f78" points="13377,-866 13031,-866 13031,-803 13377,-803 13377,-866"/>
<text text-anchor="middle" x="13204" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13204" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long)</text>
<text text-anchor="middle" x="13204" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">4.20%</text>
<text text-anchor="middle" x="13204" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="13204" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8503×</text>
</g>
<!-- std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long) -->
<g id="node86" class="node"><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long)</title>
<polygon fill="#0d1d78" stroke="#0d1d78" points="14794.5,-763 14387.5,-763 14387.5,-700 14794.5,-700 14794.5,-763"/>
<text text-anchor="middle" x="14591" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="14591" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long)</text>
<text text-anchor="middle" x="14591" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">3.83%</text>
<text text-anchor="middle" x="14591" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.32%)</text>
<text text-anchor="middle" x="14591" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">8503×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long)&#45;&gt;std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long) -->
<g id="edge78" class="edge"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long)&#45;&gt;std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long)</title>
<path fill="none" stroke="#0d1d78" stroke-width="0.5" d="M13377.2,-820.887C13632.7,-802.28 14109.9,-767.531 14383.7,-747.595"/>
<polygon fill="#0d1d78" stroke="#0d1d78" stroke-width="0.5" points="14383.9,-748.808 14387.3,-747.332 14383.7,-746.365 14383.9,-748.808"/>
<text text-anchor="middle" x="14036" y="-786" font-family="Arial" font-size="10.00" fill="#0d1d78">3.83%</text>
<text text-anchor="middle" x="14036" y="-775" font-family="Arial" font-size="10.00" fill="#0d1d78">8503×</text>
</g>
<!-- std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long)&#45;&gt;__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*) -->
<g id="edge148" class="edge"><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate(std::allocator&lt;char&gt;&amp;, unsigned long)&#45;&gt;__gnu_cxx::new_allocator&lt;char&gt;::allocate(unsigned long, void const*)</title>
<path fill="none" stroke="#0d1c77" stroke-width="0.5" d="M14794.7,-722.883C14997.9,-715.626 15319,-705.076 15597,-700 16241.8,-688.228 16403.4,-709.37 17048,-691 17737.6,-671.348 18558.7,-621.353 18901.8,-599.268"/>
<polygon fill="#0d1c77" stroke="#0d1c77" stroke-width="0.5" points="18901.9,-600.489 18905.3,-599.042 18901.7,-598.045 18901.9,-600.489"/>
<text text-anchor="middle" x="18407" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d1c77">3.51%</text>
<text text-anchor="middle" x="18407" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d1c77">8503×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long) -->
<g id="node87" class="node"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long)</title>
<polygon fill="#0d1c77" stroke="#0d1c77" points="13271.5,-969 12886.5,-969 12886.5,-906 13271.5,-906 13271.5,-969"/>
<text text-anchor="middle" x="13079" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13079" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long)</text>
<text text-anchor="middle" x="13079" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">3.64%</text>
<text text-anchor="middle" x="13079" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.42%)</text>
<text text-anchor="middle" x="13079" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8602×</text>
</g>
<!-- std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long) -->
<g id="node88" class="node"><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long)</title>
<polygon fill="#0d1a77" stroke="#0d1a77" points="14222,-866 13776,-866 13776,-803 14222,-803 14222,-866"/>
<text text-anchor="middle" x="13999" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13999" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long)</text>
<text text-anchor="middle" x="13999" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">3.21%</text>
<text text-anchor="middle" x="13999" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="13999" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8503×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long)&#45;&gt;std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long) -->
<g id="edge79" class="edge"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long)&#45;&gt;std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long)</title>
<path fill="none" stroke="#0d1a77" stroke-width="0.5" d="M13271.6,-906.559C13273.1,-906.37 13274.5,-906.184 13276,-906 13441.7,-885.107 13629.5,-866.962 13772.2,-854.314"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width="0.5" points="13772.6,-855.507 13775.9,-853.978 13772.3,-853.067 13772.6,-855.507"/>
<text text-anchor="middle" x="13549" y="-889" font-family="Arial" font-size="10.00" fill="#0d1a77">3.21%</text>
<text text-anchor="middle" x="13549" y="-878" font-family="Arial" font-size="10.00" fill="#0d1a77">8503×</text>
</g>
<!-- std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long)&#45;&gt;__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long) -->
<g id="edge149" class="edge"><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long)&#45;&gt;__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long)</title>
<path fill="none" stroke="#0d1976" stroke-width="0.5" d="M14222.2,-820.657C14582.9,-799.898 15285.1,-759.484 15597.6,-741.502"/>
<polygon fill="#0d1976" stroke="#0d1976" stroke-width="0.5" points="15597.8,-742.716 15601.2,-741.291 15597.7,-740.27 15597.8,-742.716"/>
<text text-anchor="middle" x="15048" y="-786" font-family="Arial" font-size="10.00" fill="#0d1976">2.84%</text>
<text text-anchor="middle" x="15048" y="-775" font-family="Arial" font-size="10.00" fill="#0d1976">8503×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;) -->
<g id="node89" class="node"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="12110.5,-1072 11697.5,-1072 11697.5,-1009 12110.5,-1009 12110.5,-1072"/>
<text text-anchor="middle" x="11904" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="11904" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;)</text>
<text text-anchor="middle" x="11904" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.83%</text>
<text text-anchor="middle" x="11904" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.32%)</text>
<text text-anchor="middle" x="11904" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl(std::allocator&lt;char&gt; const&amp;) -->
<g id="node90" class="node"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl(std::allocator&lt;char&gt; const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="12140.5,-969 11667.5,-969 11667.5,-906 12140.5,-906 12140.5,-969"/>
<text text-anchor="middle" x="11904" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="11904" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl(std::allocator&lt;char&gt; const&amp;)</text>
<text text-anchor="middle" x="11904" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">0.52%</text>
<text text-anchor="middle" x="11904" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.49%)</text>
<text text-anchor="middle" x="11904" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;)&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl(std::allocator&lt;char&gt; const&amp;) -->
<g id="edge80" class="edge"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;)&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl(std::allocator&lt;char&gt; const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M11904,-1008.92C11904,-997.557 11904,-984.589 11904,-972.904"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="11905.2,-972.822 11904,-969.322 11902.8,-972.822 11905.2,-972.822"/>
<text text-anchor="middle" x="11918" y="-992" font-family="Arial" font-size="10.00" fill="#0d0f73">0.52%</text>
<text text-anchor="middle" x="11918" y="-981" font-family="Arial" font-size="10.00" fill="#0d0f73">8415×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base() -->
<g id="node91" class="node"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base()</title>
<polygon fill="#0d2079" stroke="#0d2079" points="13228.5,-1072 12929.5,-1072 12929.5,-1009 13228.5,-1009 13228.5,-1072"/>
<text text-anchor="middle" x="13079" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13079" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base()</text>
<text text-anchor="middle" x="13079" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">4.53%</text>
<text text-anchor="middle" x="13079" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.60%)</text>
<text text-anchor="middle" x="13079" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8569×</text>
</g>
<!-- std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base()&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long) -->
<g id="edge81" class="edge"><title>std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base()&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_deallocate(char*, unsigned long)</title>
<path fill="none" stroke="#0d1c77" stroke-width="0.5" d="M13079,-1008.92C13079,-997.557 13079,-984.589 13079,-972.904"/>
<polygon fill="#0d1c77" stroke="#0d1c77" stroke-width="0.5" points="13080.2,-972.822 13079,-969.322 13077.8,-972.822 13080.2,-972.822"/>
<text text-anchor="middle" x="13093" y="-992" font-family="Arial" font-size="10.00" fill="#0d1c77">3.63%</text>
<text text-anchor="middle" x="13093" y="-981" font-family="Arial" font-size="10.00" fill="#0d1c77">8569×</text>
</g>
<!-- std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type) -->
<g id="node93" class="node"><title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type)</title>
<polygon fill="#f15c02" stroke="#f15c02" points="7275.5,-2740 6490.5,-2740 6490.5,-2677 7275.5,-2677 7275.5,-2740"/>
<text text-anchor="middle" x="6883" y="-2728" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6883" y="-2717" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type)</text>
<text text-anchor="middle" x="6883" y="-2706" font-family="Arial" font-size="10.00" fill="#ffffff">90.55%</text>
<text text-anchor="middle" x="6883" y="-2695" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="6883" y="-2684" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)&#45;&gt;std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type) -->
<g id="edge84" class="edge"><title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)&#45;&gt;std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type)</title>
<path fill="none" stroke="#f15c02" stroke-width="3.62" d="M7396.68,-2779.99C7307.58,-2767.76 7204.89,-2753.67 7114.86,-2741.32"/>
<polygon fill="#f15c02" stroke="#f15c02" stroke-width="3.62" points="7115.21,-2738.01 7105.35,-2740.01 7114.31,-2744.6 7115.21,-2738.01"/>
<text text-anchor="middle" x="7334" y="-2763" font-family="Arial" font-size="10.00" fill="#f15c02">90.55%</text>
<text text-anchor="middle" x="7334" y="-2752" font-family="Arial" font-size="10.00" fill="#f15c02">11×</text>
</g>
<!-- std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type) -->
<g id="node94" class="node"><title>std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type)</title>
<polygon fill="#f15c02" stroke="#f15c02" points="7487,-2637 5871,-2637 5871,-2574 7487,-2574 7487,-2637"/>
<text text-anchor="middle" x="6679" y="-2625" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6679" y="-2614" font-family="Arial" font-size="10.00" fill="#ffffff">std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type)</text>
<text text-anchor="middle" x="6679" y="-2603" font-family="Arial" font-size="10.00" fill="#ffffff">90.54%</text>
<text text-anchor="middle" x="6679" y="-2592" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="6679" y="-2581" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type)&#45;&gt;std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type) -->
<g id="edge83" class="edge"><title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type)&#45;&gt;std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type)</title>
<path fill="none" stroke="#f15c02" stroke-width="3.62" d="M6821.24,-2676.92C6798.67,-2665.75 6772.98,-2653.03 6749.7,-2641.5"/>
<polygon fill="#f15c02" stroke="#f15c02" stroke-width="3.62" points="6750.89,-2638.38 6740.9,-2637.15 6747.94,-2644.34 6750.89,-2638.38"/>
<text text-anchor="middle" x="6817" y="-2660" font-family="Arial" font-size="10.00" fill="#f15c02">90.54%</text>
<text text-anchor="middle" x="6817" y="-2649" font-family="Arial" font-size="10.00" fill="#f15c02">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type) -->
<g id="node121" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)</title>
<polygon fill="#f15d02" stroke="#f15d02" points="7035,-2534 6323,-2534 6323,-2471 7035,-2471 7035,-2534"/>
<text text-anchor="middle" x="6679" y="-2522" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6679" y="-2511" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)</text>
<text text-anchor="middle" x="6679" y="-2500" font-family="Arial" font-size="10.00" fill="#ffffff">90.51%</text>
<text text-anchor="middle" x="6679" y="-2489" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="6679" y="-2478" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type)&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type) -->
<g id="edge154" class="edge"><title>std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type)&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)</title>
<path fill="none" stroke="#f15d02" stroke-width="3.62" d="M6679,-2573.92C6679,-2564.52 6679,-2554.01 6679,-2544.05"/>
<polygon fill="#f15d02" stroke="#f15d02" stroke-width="3.62" points="6682.33,-2543.82 6679,-2534.32 6675.68,-2543.82 6682.33,-2543.82"/>
<text text-anchor="middle" x="6696" y="-2557" font-family="Arial" font-size="10.00" fill="#f15d02">90.51%</text>
<text text-anchor="middle" x="6696" y="-2546" font-family="Arial" font-size="10.00" fill="#f15d02">11×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const -->
<g id="node95" class="node"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const</title>
<polygon fill="#0c8991" stroke="#0c8991" points="16749.5,-1216 16078.5,-1216 16078.5,-1153 16749.5,-1153 16749.5,-1216"/>
<text text-anchor="middle" x="16414" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16414" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const</text>
<text text-anchor="middle" x="16414" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">23.50%</text>
<text text-anchor="middle" x="16414" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(1.59%)</text>
<text text-anchor="middle" x="16414" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() -->
<g id="edge86" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M16749.8,-1153.52C16752.2,-1153.34 16754.6,-1153.17 16757,-1153 17355.9,-1110.4 17506,-1102.97 18106,-1081 18307.2,-1073.63 18358.3,-1087.85 18559,-1072 18559.4,-1071.97 18559.8,-1071.94 18560.2,-1071.9"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="18560.5,-1073.11 18563.9,-1071.6 18560.3,-1070.66 18560.5,-1073.11"/>
<text text-anchor="middle" x="18120" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.15%</text>
<text text-anchor="middle" x="18120" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0d73">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="edge87" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::collate&lt;char&gt; const&amp; std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt;(std::locale const&amp;)</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M16703,-1153C16708.6,-1150.25 16713.3,-1147.26 16717,-1144 16738.6,-1124.82 16710.3,-1098.84 16733,-1081 16743.8,-1072.54 17705.3,-1072.95 17719,-1072 17719.4,-1071.97 17719.8,-1071.94 17720.2,-1071.91"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="17720.5,-1073.12 17723.9,-1071.65 17720.3,-1070.68 17720.5,-1073.12"/>
<text text-anchor="middle" x="16747" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.74%</text>
<text text-anchor="middle" x="16747" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1876">8414×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const -->
<g id="edge88" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::collate&lt;char&gt;::transform(char const*, char const*) const</title>
<path fill="none" stroke="#0c5085" stroke-width="0.56" d="M16749.8,-1153.34C16752.2,-1153.23 16754.6,-1153.11 16757,-1153 16771.8,-1152.31 18872.6,-1153.44 18884,-1144 18905.9,-1125.78 18874.2,-1099.34 18896,-1081 18908.8,-1070.28 19479.4,-1073.61 19496,-1072 19497,-1071.9 19498.1,-1071.8 19499.1,-1071.69"/>
<polygon fill="#0c5085" stroke="#0c5085" stroke-width="0.56" points="19499.5,-1072.98 19503.2,-1071.26 19499.3,-1070.34 19499.5,-1072.98"/>
<text text-anchor="middle" x="18913" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0c5085">14.06%</text>
<text text-anchor="middle" x="18913" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0c5085">8414×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) -->
<g id="node96" class="node"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</title>
<polygon fill="#0d2179" stroke="#0d2179" points="17714.5,-1072 17055.5,-1072 17055.5,-1009 17714.5,-1009 17714.5,-1072"/>
<text text-anchor="middle" x="17385" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="17385" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</text>
<text text-anchor="middle" x="17385" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">4.74%</text>
<text text-anchor="middle" x="17385" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.73%)</text>
<text text-anchor="middle" x="17385" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) -->
<g id="edge85" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M16661,-1152.92C16666.7,-1150.2 16671.4,-1147.23 16675,-1144 16696.4,-1124.6 16668.4,-1099.02 16691,-1081 16706.5,-1068.59 17029.1,-1073.15 17049,-1072 17049.8,-1071.96 17050.5,-1071.91 17051.3,-1071.87"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="17051.7,-1073.07 17055.2,-1071.64 17051.6,-1070.62 17051.7,-1073.07"/>
<text text-anchor="middle" x="16705" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d2179">4.74%</text>
<text text-anchor="middle" x="16705" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d2179">8415×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*) -->
<g id="node103" class="node"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*)</title>
<polygon fill="#0d1d78" stroke="#0d1d78" points="17653,-969 17117,-969 17117,-906 17653,-906 17653,-969"/>
<text text-anchor="middle" x="17385" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="17385" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*)</text>
<text text-anchor="middle" x="17385" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">3.91%</text>
<text text-anchor="middle" x="17385" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="17385" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*) -->
<g id="edge96" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*)</title>
<path fill="none" stroke="#0d1d78" stroke-width="0.5" d="M17385,-1008.92C17385,-997.557 17385,-984.589 17385,-972.904"/>
<polygon fill="#0d1d78" stroke="#0d1d78" stroke-width="0.5" points="17386.2,-972.822 17385,-969.322 17383.8,-972.822 17386.2,-972.822"/>
<text text-anchor="middle" x="17399" y="-992" font-family="Arial" font-size="10.00" fill="#0d1d78">3.91%</text>
<text text-anchor="middle" x="17399" y="-981" font-family="Arial" font-size="10.00" fill="#0d1d78">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const -->
<g id="node97" class="node"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const</title>
<polygon fill="#1bb909" stroke="#1bb909" points="15387.5,-1360 14678.5,-1360 14678.5,-1297 15387.5,-1297 15387.5,-1360"/>
<text text-anchor="middle" x="15033" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15033" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const</text>
<text text-anchor="middle" x="15033" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">52.49%</text>
<text text-anchor="middle" x="15033" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(1.88%)</text>
<text text-anchor="middle" x="15033" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="edge90" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)</title>
<path fill="none" stroke="#0d1d78" stroke-width="0.5" d="M15387.8,-1297.21C15389.2,-1297.14 15390.6,-1297.07 15392,-1297 15706.3,-1281.67 15786,-1309.1 16100,-1288 16330.5,-1272.51 16386,-1246.53 16616,-1225 16631.3,-1223.57 16741.6,-1225.04 16754,-1216 16778.4,-1198.28 16759.9,-1176.26 16779,-1153 16816.6,-1107.31 16834.3,-1097.87 16891,-1081 16925.5,-1070.74 18150.2,-1075.03 18186,-1072 18186.6,-1071.95 18187.1,-1071.9 18187.7,-1071.85"/>
<polygon fill="#0d1d78" stroke="#0d1d78" stroke-width="0.5" points="18188.1,-1073.05 18191.4,-1071.52 18187.8,-1070.61 18188.1,-1073.05"/>
<text text-anchor="middle" x="16793" y="-1187.5" font-family="Arial" font-size="10.00" fill="#0d1d78">3.91%</text>
<text text-anchor="middle" x="16793" y="-1176.5" font-family="Arial" font-size="10.00" fill="#0d1d78">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const -->
<g id="edge89" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt;(char*, char*) const</title>
<path fill="none" stroke="#0c8991" stroke-width="0.94" d="M15143.5,-1296.88C15238.1,-1272.26 15378.4,-1239.46 15503,-1225 15624.6,-1210.88 15931.7,-1222.17 16054,-1216 16060.4,-1215.68 16066.8,-1215.34 16073.3,-1214.97"/>
<polygon fill="#0c8991" stroke="#0c8991" stroke-width="0.94" points="16073.5,-1216.64 16078.2,-1214.69 16073.3,-1213.28 16073.5,-1216.64"/>
<text text-anchor="middle" x="15520" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0c8991">23.50%</text>
<text text-anchor="middle" x="15520" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0c8991">8415×</text>
</g>
<!-- std::ctype&lt;char&gt;::tolower(char*, char const*) const -->
<g id="node98" class="node"><title>std::ctype&lt;char&gt;::tolower(char*, char const*) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="13811.5,-1216 13572.5,-1216 13572.5,-1153 13811.5,-1153 13811.5,-1216"/>
<text text-anchor="middle" x="13692" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13692" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">std::ctype&lt;char&gt;::tolower(char*, char const*) const</text>
<text text-anchor="middle" x="13692" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.71%</text>
<text text-anchor="middle" x="13692" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.42%)</text>
<text text-anchor="middle" x="13692" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::ctype&lt;char&gt;::tolower(char*, char const*) const -->
<g id="edge91" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::ctype&lt;char&gt;::tolower(char*, char const*) const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14678.2,-1297.26C14676.5,-1297.17 14674.7,-1297.09 14673,-1297 14543.1,-1290.51 14216.8,-1305.41 14088,-1288 13983.7,-1273.91 13867.5,-1241.8 13788.1,-1217.25"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="13788.1,-1215.95 13784.4,-1216.08 13787.3,-1218.29 13788.1,-1215.95"/>
<text text-anchor="middle" x="14102" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.71%</text>
<text text-anchor="middle" x="14102" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data() -->
<g id="node99" class="node"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data()</title>
<polygon fill="#0d1575" stroke="#0d1575" points="12840,-1216 12622,-1216 12622,-1153 12840,-1153 12840,-1216"/>
<text text-anchor="middle" x="12731" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="12731" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data()</text>
<text text-anchor="middle" x="12731" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">1.86%</text>
<text text-anchor="middle" x="12731" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(1.17%)</text>
<text text-anchor="middle" x="12731" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">33660×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data() -->
<g id="edge92" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data()</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M14678.2,-1297.24C14676.5,-1297.16 14674.7,-1297.08 14673,-1297 14506.9,-1289.48 13342.2,-1306.16 13177,-1288 13058.7,-1274.99 12926.1,-1242.1 12836.5,-1217.06"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="12836.7,-1215.86 12833,-1216.1 12836.1,-1218.22 12836.7,-1215.86"/>
<text text-anchor="middle" x="13193.5" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d1575">1.86%</text>
<text text-anchor="middle" x="13193.5" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d1575">33660×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size() const -->
<g id="node100" class="node"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size() const</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="13563.5,-1216 13318.5,-1216 13318.5,-1153 13563.5,-1153 13563.5,-1216"/>
<text text-anchor="middle" x="13441" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13441" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size() const</text>
<text text-anchor="middle" x="13441" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">0.59%</text>
<text text-anchor="middle" x="13441" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="13441" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">17050×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size() const -->
<g id="edge93" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::size() const</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M14678.2,-1297.25C14676.5,-1297.17 14674.7,-1297.08 14673,-1297 14574.8,-1292.35 13885.3,-1302.57 13788,-1288 13696,-1274.22 13594.3,-1242.08 13524.9,-1217.43"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="13525,-1216.14 13521.2,-1216.12 13524.1,-1218.45 13525,-1216.14"/>
<text text-anchor="middle" x="13804.5" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.59%</text>
<text text-anchor="middle" x="13804.5" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0f73">16830×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) -->
<g id="node101" class="node"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</title>
<polygon fill="#0c5085" stroke="#0c5085" points="13309,-1216 12849,-1216 12849,-1153 13309,-1153 13309,-1216"/>
<text text-anchor="middle" x="13079" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13079" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</text>
<text text-anchor="middle" x="13079" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">14.02%</text>
<text text-anchor="middle" x="13079" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.78%)</text>
<text text-anchor="middle" x="13079" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;) -->
<g id="edge94" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)</title>
<path fill="none" stroke="#0c5085" stroke-width="0.56" d="M14678.2,-1297.24C14676.5,-1297.16 14674.7,-1297.08 14673,-1297 14544,-1291.05 13639.2,-1303.5 13511,-1288 13397,-1274.22 13269.5,-1241.78 13182.7,-1217.06"/>
<polygon fill="#0c5085" stroke="#0c5085" stroke-width="0.56" points="13183,-1215.8 13179.1,-1216.03 13182.3,-1218.29 13183,-1215.8"/>
<text text-anchor="middle" x="13528" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0c5085">14.02%</text>
<text text-anchor="middle" x="13528" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0c5085">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector() -->
<g id="node102" class="node"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()</title>
<polygon fill="#0d277b" stroke="#0d277b" points="14051.5,-1216 13820.5,-1216 13820.5,-1153 14051.5,-1153 14051.5,-1216"/>
<text text-anchor="middle" x="13936" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="13936" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()</text>
<text text-anchor="middle" x="13936" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">6.05%</text>
<text text-anchor="middle" x="13936" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="13936" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">8569×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector() -->
<g id="edge95" class="edge"><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()</title>
<path fill="none" stroke="#0d277a" stroke-width="0.5" d="M14725.6,-1296.99C14488.4,-1272.6 14180.5,-1238.81 14056,-1216 14055.7,-1215.95 14055.4,-1215.9 14055.2,-1215.85"/>
<polygon fill="#0d277a" stroke="#0d277a" stroke-width="0.5" points="14055.2,-1214.61 14051.5,-1215.16 14054.7,-1217.01 14055.2,-1214.61"/>
<text text-anchor="middle" x="14640" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d277a">5.97%</text>
<text text-anchor="middle" x="14640" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d277a">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data()&#45;&gt;char* std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt;(char*) const -->
<g id="edge158" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::data()&#45;&gt;char* std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt;(char*) const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M12621.9,-1153.73C12620.3,-1153.47 12618.6,-1153.23 12617,-1153 12492.2,-1135.58 12175.4,-1156.78 12050,-1144 11908.5,-1129.58 11748.8,-1097.31 11639.8,-1072.8"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="11639.9,-1071.58 11636.3,-1072.01 11639.4,-1073.97 11639.9,-1071.58"/>
<text text-anchor="middle" x="12066.5" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.68%</text>
<text text-anchor="middle" x="12066.5" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1074">33660×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;) -->
<g id="edge160" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_Vector_base(std::allocator&lt;char&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M12848.9,-1153.38C12847.3,-1153.25 12845.6,-1153.12 12844,-1153 12668.9,-1139.68 12623.6,-1162.29 12449,-1144 12307.1,-1129.15 12147,-1097.16 12037.2,-1072.84"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="12037.3,-1071.62 12033.6,-1072.05 12036.8,-1074.01 12037.3,-1071.62"/>
<text text-anchor="middle" x="12463" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.83%</text>
<text text-anchor="middle" x="12463" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type) -->
<g id="node144" class="node"><title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type)</title>
<polygon fill="#0d4783" stroke="#0d4783" points="12600.5,-1072 12119.5,-1072 12119.5,-1009 12600.5,-1009 12600.5,-1072"/>
<text text-anchor="middle" x="12360" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="12360" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type)</text>
<text text-anchor="middle" x="12360" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">12.41%</text>
<text text-anchor="middle" x="12360" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="12360" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)&#45;&gt;void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type) -->
<g id="edge161" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::vector&lt;char*, void&gt;(char*, char*, std::allocator&lt;char&gt; const&amp;)&#45;&gt;void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type)</title>
<path fill="none" stroke="#0d4783" stroke-width="0.5" d="M12848.9,-1153.5C12847.3,-1153.33 12845.6,-1153.17 12844,-1153 12789,-1147.44 12774.4,-1153.62 12720,-1144 12626.9,-1127.55 12523.4,-1096.71 12451.4,-1073.14"/>
<polygon fill="#0d4783" stroke="#0d4783" stroke-width="0.5" points="12451.7,-1071.95 12448,-1072.02 12450.9,-1074.27 12451.7,-1071.95"/>
<text text-anchor="middle" x="12737" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d4783">12.41%</text>
<text text-anchor="middle" x="12737" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d4783">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base() -->
<g id="edge162" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::~_Vector_base()</title>
<path fill="none" stroke="#0d2079" stroke-width="0.5" d="M13820.5,-1153.89C13819,-1153.59 13817.5,-1153.29 13816,-1153 13559.3,-1102.7 13491,-1115.43 13233,-1072 13232.7,-1071.95 13232.4,-1071.91 13232.2,-1071.86"/>
<polygon fill="#0d2079" stroke="#0d2079" stroke-width="0.5" points="13232.2,-1070.62 13228.5,-1071.24 13231.8,-1073.04 13232.2,-1070.62"/>
<text text-anchor="middle" x="13772" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d2079">4.53%</text>
<text text-anchor="middle" x="13772" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d2079">8569×</text>
</g>
<!-- void std::_Destroy&lt;char*, char&gt;(char*, char*, std::allocator&lt;char&gt;&amp;) -->
<g id="node145" class="node"><title>void std::_Destroy&lt;char*, char&gt;(char*, char*, std::allocator&lt;char&gt;&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="12920.5,-1072 12609.5,-1072 12609.5,-1009 12920.5,-1009 12920.5,-1072"/>
<text text-anchor="middle" x="12765" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="12765" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">void std::_Destroy&lt;char*, char&gt;(char*, char*, std::allocator&lt;char&gt;&amp;)</text>
<text text-anchor="middle" x="12765" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.85%</text>
<text text-anchor="middle" x="12765" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.35%)</text>
<text text-anchor="middle" x="12765" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">8602×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()&#45;&gt;void std::_Destroy&lt;char*, char&gt;(char*, char*, std::allocator&lt;char&gt;&amp;) -->
<g id="edge163" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::~vector()&#45;&gt;void std::_Destroy&lt;char*, char&gt;(char*, char*, std::allocator&lt;char&gt;&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M13820.5,-1153.63C13819,-1153.41 13817.5,-1153.2 13816,-1153 13694,-1136.72 13384.4,-1157.49 13262,-1144 13132,-1129.66 12985.6,-1097.47 12885.5,-1072.96"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="12885.7,-1071.74 12882,-1072.1 12885.1,-1074.12 12885.7,-1071.74"/>
<text text-anchor="middle" x="13276" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.85%</text>
<text text-anchor="middle" x="13276" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d1074">8569×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type) -->
<g id="node151" class="node"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type)</title>
<polygon fill="#0d1b77" stroke="#0d1b77" points="17703.5,-866 17066.5,-866 17066.5,-803 17703.5,-803 17703.5,-866"/>
<text text-anchor="middle" x="17385" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="17385" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type)</text>
<text text-anchor="middle" x="17385" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">3.33%</text>
<text text-anchor="middle" x="17385" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="17385" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type) -->
<g id="edge177" class="edge"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type)</title>
<path fill="none" stroke="#0d1b77" stroke-width="0.5" d="M17385,-905.923C17385,-894.557 17385,-881.589 17385,-869.904"/>
<polygon fill="#0d1b77" stroke="#0d1b77" stroke-width="0.5" points="17386.2,-869.822 17385,-866.322 17383.8,-869.822 17386.2,-869.822"/>
<text text-anchor="middle" x="17399" y="-889" font-family="Arial" font-size="10.00" fill="#0d1b77">3.33%</text>
<text text-anchor="middle" x="17399" y="-878" font-family="Arial" font-size="10.00" fill="#0d1b77">8415×</text>
</g>
<!-- strxfrm_l&#45;&gt;__GI___stpncpy -->
<g id="edge174" class="edge"><title>strxfrm_l&#45;&gt;__GI___stpncpy</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M20965,-699.688C20965,-677.079 20965,-646.364 20965,-622.945"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="20966.2,-622.752 20965,-619.252 20963.8,-622.752 20966.2,-622.752"/>
<text text-anchor="middle" x="20979" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.67%</text>
<text text-anchor="middle" x="20979" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d1876">8448×</text>
</g>
<!-- strlen -->
<g id="node106" class="node"><title>strlen</title>
<polygon fill="#0d1074" stroke="#0d1074" points="20320.5,-619 20253.5,-619 20253.5,-556 20320.5,-556 20320.5,-619"/>
<text text-anchor="middle" x="20287" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.23.so</text>
<text text-anchor="middle" x="20287" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">strlen</text>
<text text-anchor="middle" x="20287" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">0.80%</text>
<text text-anchor="middle" x="20287" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.80%)</text>
<text text-anchor="middle" x="20287" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">17087×</text>
</g>
<!-- strxfrm_l&#45;&gt;strlen -->
<g id="edge175" class="edge"><title>strxfrm_l&#45;&gt;strlen</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M20931.3,-714.115C20918.1,-708.519 20902.7,-702.935 20888,-700 20860.6,-694.526 20411.6,-702.127 20386,-691 20353.3,-676.774 20326,-646.073 20308.5,-621.959"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="20309.4,-621.175 20306.4,-619.053 20307.4,-622.608 20309.4,-621.175"/>
<text text-anchor="middle" x="20400" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="20400" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8448×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;0x00000000000d46e0 -->
<g id="edge101" class="edge"><title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;0x00000000000d46e0</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M20180,-905.923C20180,-894.557 20180,-881.589 20180,-869.904"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="20181.2,-869.822 20180,-866.322 20178.8,-869.822 20181.2,-869.822"/>
<text text-anchor="middle" x="20194" y="-889" font-family="Arial" font-size="10.00" fill="#0d1074">0.86%</text>
<text text-anchor="middle" x="20194" y="-878" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;_dl_runtime_resolve_avx&#39;2 -->
<g id="edge102" class="edge"><title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;_dl_runtime_resolve_avx&#39;2</title>
<path fill="none" stroke="#0d4081" stroke-width="0.5" d="M20140.5,-969.261C20080.6,-1014.38 19961.8,-1098.1 19848,-1144 19811.4,-1158.78 19768.2,-1168.43 19733.1,-1174.49"/>
<polygon fill="#0d4081" stroke="#0d4081" stroke-width="0.5" points="19732.5,-1173.34 19729.3,-1175.14 19732.9,-1175.76 19732.5,-1173.34"/>
<text text-anchor="middle" x="20100" y="-1043.5" font-family="Arial" font-size="10.00" fill="#0d4081">11.03%</text>
<text text-anchor="middle" x="20100" y="-1032.5" font-family="Arial" font-size="10.00" fill="#0d4081">1×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) -->
<g id="edge103" class="edge"><title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M20245.6,-905.857C20271,-894.932 20300.4,-883.293 20328,-875 20337.4,-872.165 20347.2,-869.487 20357,-866.964"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="20357.6,-868.088 20360.7,-866.042 20357,-865.713 20357.6,-868.088"/>
<text text-anchor="middle" x="20342" y="-889" font-family="Arial" font-size="10.00" fill="#0d0e73">0.26%</text>
<text text-anchor="middle" x="20342" y="-878" font-family="Arial" font-size="10.00" fill="#0d0e73">8448×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const -->
<g id="edge104" class="edge"><title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;std::__cxx11::collate&lt;char&gt;::_M_transform(char*, char const*, unsigned long) const</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M20349,-909.175C20356.8,-908.07 20364.5,-907.005 20372,-906 20390.4,-903.544 20438.9,-906.299 20455,-897 20465.5,-890.94 20460.3,-880.603 20471,-875 20491.4,-864.313 20863,-868.036 20886,-866 20886.4,-865.964 20886.8,-865.928 20887.2,-865.891"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="20887.5,-867.094 20890.9,-865.554 20887.3,-864.655 20887.5,-867.094"/>
<text text-anchor="middle" x="20485" y="-889" font-family="Arial" font-size="10.00" fill="#0d1375">1.46%</text>
<text text-anchor="middle" x="20485" y="-878" font-family="Arial" font-size="10.00" fill="#0d1375">8447×</text>
</g>
<!-- std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;strlen -->
<g id="edge105" class="edge"><title>std::__cxx11::collate&lt;char&gt;::do_transform(char const*, char const*) const&#45;&gt;strlen</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M20212.4,-905.746C20222.8,-894.23 20233.3,-880.42 20240,-866 20259.9,-823.342 20276.5,-687.719 20283.4,-623.221"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="20284.7,-623.064 20283.9,-619.452 20282.3,-622.801 20284.7,-623.064"/>
<text text-anchor="middle" x="20278" y="-786" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="20278" y="-775" font-family="Arial" font-size="10.00" fill="#0d0e73">8448×</text>
</g>
<!-- std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const -->
<g id="node107" class="node"><title>std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const</title>
<polygon fill="#0d2379" stroke="#0d2379" points="17079,-1288 16617,-1288 16617,-1225 17079,-1225 17079,-1288"/>
<text text-anchor="middle" x="16848" y="-1276" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16848" y="-1265" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const</text>
<text text-anchor="middle" x="16848" y="-1254" font-family="Arial" font-size="10.00" fill="#ffffff">5.09%</text>
<text text-anchor="middle" x="16848" y="-1243" font-family="Arial" font-size="10.00" fill="#ffffff">(0.71%)</text>
<text text-anchor="middle" x="16848" y="-1232" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const&#45;&gt;std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;) -->
<g id="edge107" class="edge"><title>std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const&#45;&gt;std::ctype&lt;char&gt; const&amp; std::use_facet&lt;std::ctype&lt;char&gt; &gt;(std::locale const&amp;)</title>
<path fill="none" stroke="#0d1d78" stroke-width="0.5" d="M16822.7,-1224.57C16821.2,-1221.78 16820,-1218.91 16819,-1216 16810.3,-1189.39 16799.8,-1173.38 16819,-1153 16923.4,-1042.27 18034.8,-1088.77 18186,-1072 18186.6,-1071.94 18187.1,-1071.87 18187.7,-1071.81"/>
<polygon fill="#0d1d78" stroke="#0d1d78" stroke-width="0.5" points="18188.1,-1073 18191.4,-1071.39 18187.8,-1070.57 18188.1,-1073"/>
<text text-anchor="middle" x="16833" y="-1187.5" font-family="Arial" font-size="10.00" fill="#0d1d78">3.91%</text>
<text text-anchor="middle" x="16833" y="-1176.5" font-family="Arial" font-size="10.00" fill="#0d1d78">8415×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const -->
<g id="node108" class="node"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const</title>
<polygon fill="#e69804" stroke="#e69804" points="15340,-1463 14726,-1463 14726,-1400 15340,-1400 15340,-1463"/>
<text text-anchor="middle" x="15033" y="-1451" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15033" y="-1440" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const</text>
<text text-anchor="middle" x="15033" y="-1429" font-family="Arial" font-size="10.00" fill="#ffffff">83.60%</text>
<text text-anchor="middle" x="15033" y="-1418" font-family="Arial" font-size="10.00" fill="#ffffff">(3.85%)</text>
<text text-anchor="middle" x="15033" y="-1407" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge108" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; std::find&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1f78" stroke-width="0.5" d="M14725.9,-1421.54C14258.1,-1407.89 13345,-1381.24 12621.2,-1360.12"/>
<polygon fill="#0d1f78" stroke="#0d1f78" stroke-width="0.5" points="12621,-1358.89 12617.5,-1360.01 12620.9,-1361.34 12621,-1358.89"/>
<text text-anchor="middle" x="13627" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1f78">4.30%</text>
<text text-anchor="middle" x="13627" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1f78">8415×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() -->
<g id="edge114" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string()</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M15340,-1427.72C15870.9,-1422.61 16994.6,-1410.42 17944,-1391 18070,-1388.42 18958.6,-1400.33 19078,-1360 19129.9,-1342.48 19253,-1264.74 19278,-1216 19290.8,-1191.08 19297.6,-1173.03 19278,-1153 19262.8,-1137.46 18904.2,-1157.28 18887,-1144 18864,-1126.2 18888.2,-1102.94 18869,-1081 18867,-1078.69 18864.8,-1076.51 18862.5,-1074.45"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="18863.2,-1073.44 18859.7,-1072.09 18861.6,-1075.3 18863.2,-1073.44"/>
<text text-anchor="middle" x="19287" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.15%</text>
<text text-anchor="middle" x="19287" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0d73">8415×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;) -->
<g id="edge109" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool __gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14725.8,-1429.65C13437.3,-1425.81 8532.95,-1408.02 8470,-1360 8446.85,-1342.34 8475.16,-1314.65 8452,-1297 8442.28,-1289.59 7584.22,-1288.15 7572,-1288 7571.85,-1288 7571.69,-1288 7571.54,-1287.99"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="7571.82,-1286.77 7568.3,-1287.95 7571.79,-1289.22 7571.82,-1286.77"/>
<text text-anchor="middle" x="9288" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="9288" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool __gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;) -->
<g id="edge110" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool __gnu_cxx::operator!=&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14725.6,-1430.53C13744.2,-1430.24 10598.5,-1426.4 7995,-1391 7460.35,-1383.73 6869.33,-1371.64 6364.84,-1360.09"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="6364.67,-1358.86 6361.14,-1360 6364.61,-1361.31 6364.67,-1358.86"/>
<text text-anchor="middle" x="8009" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="8009" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool __gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;) -->
<g id="edge111" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool __gnu_cxx::operator!=&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M14726,-1429.8C13507.7,-1426.88 9050.23,-1414.67 8417,-1391 8245.39,-1384.58 8055.55,-1372.25 7895.18,-1360.3"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="7894.98,-1359.06 7891.4,-1360.02 7894.8,-1361.5 7894.98,-1359.06"/>
<text text-anchor="middle" x="8433.5" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1274">1.29%</text>
<text text-anchor="middle" x="8433.5" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1274">13827×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;) -->
<g id="edge112" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;bool std::binary_search&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, char const&amp;)</title>
<path fill="none" stroke="#0d2c7c" stroke-width="0.5" d="M15340.2,-1400.4C15469.1,-1387.78 15618.8,-1373.11 15748.5,-1360.41"/>
<polygon fill="#0d2c7c" stroke="#0d2c7c" stroke-width="0.5" points="15749,-1361.59 15752.3,-1360.03 15748.7,-1359.15 15749,-1361.59"/>
<text text-anchor="middle" x="15655" y="-1383" font-family="Arial" font-size="10.00" fill="#0d2c7c">7.14%</text>
<text text-anchor="middle" x="15655" y="-1372" font-family="Arial" font-size="10.00" fill="#0d2c7c">8448×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const -->
<g id="edge113" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char*&gt;(char*, char*) const</title>
<path fill="none" stroke="#1bb909" stroke-width="2.1" d="M15033,-1399.92C15033,-1389.73 15033,-1378.25 15033,-1367.57"/>
<polygon fill="#1bb909" stroke="#1bb909" stroke-width="2.1" points="15035.5,-1367.52 15033,-1360.32 15030.5,-1367.52 15035.5,-1367.52"/>
<text text-anchor="middle" x="15050" y="-1383" font-family="Arial" font-size="10.00" fill="#1bb909">52.49%</text>
<text text-anchor="middle" x="15050" y="-1372" font-family="Arial" font-size="10.00" fill="#1bb909">8415×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const -->
<g id="edge115" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::__cxx11::regex_traits&lt;char&gt;::isctype(char, std::__cxx11::regex_traits&lt;char&gt;::_RegexMask) const</title>
<path fill="none" stroke="#0d2379" stroke-width="0.5" d="M15340.2,-1426.92C15815.6,-1420.08 16680.9,-1401.93 16735,-1360 16758.1,-1342.08 16734.4,-1318.74 16754,-1297 16756,-1294.73 16758.2,-1292.59 16760.6,-1290.56"/>
<polygon fill="#0d2379" stroke="#0d2379" stroke-width="0.5" points="16761.4,-1291.43 16763.3,-1288.24 16759.9,-1289.55 16761.4,-1291.43"/>
<text text-anchor="middle" x="16722" y="-1383" font-family="Arial" font-size="10.00" fill="#0d2379">5.09%</text>
<text text-anchor="middle" x="16722" y="-1372" font-family="Arial" font-size="10.00" fill="#0d2379">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const -->
<g id="node109" class="node"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="17260,-1360 17010,-1360 17010,-1297 17260,-1297 17260,-1360"/>
<text text-anchor="middle" x="17135" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="17135" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const</text>
<text text-anchor="middle" x="17135" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="17135" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="17135" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8503×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const -->
<g id="edge116" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M15340.3,-1430.55C15780.9,-1429.47 16570.3,-1422.93 16854,-1391 16908.3,-1384.89 16967.5,-1372.78 17017.5,-1360.9"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="17017.9,-1362.05 17021.1,-1360.05 17017.4,-1359.67 17017.9,-1362.05"/>
<text text-anchor="middle" x="16993" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.79%</text>
<text text-anchor="middle" x="16993" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8448×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const -->
<g id="node110" class="node"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="17001,-1360 16759,-1360 16759,-1297 17001,-1297 17001,-1360"/>
<text text-anchor="middle" x="16880" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16880" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const</text>
<text text-anchor="middle" x="16880" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="16880" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="16880" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8503×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const -->
<g id="edge117" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M15340.2,-1427.53C15822,-1422.29 16707.5,-1410.15 16775,-1391 16796.4,-1384.93 16818,-1373.43 16836,-1362"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="16836.8,-1362.94 16839.1,-1360.02 16835.5,-1360.88 16836.8,-1362.94"/>
<text text-anchor="middle" x="16838" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.79%</text>
<text text-anchor="middle" x="16838" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8448×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const -->
<g id="node111" class="node"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19074,-1360 18172,-1360 18172,-1297 19074,-1297 19074,-1360"/>
<text text-anchor="middle" x="18623" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="18623" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const</text>
<text text-anchor="middle" x="18623" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="18623" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="18623" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const -->
<g id="edge118" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M15340.2,-1429.61C15901.7,-1426.63 17131.6,-1413.93 18167,-1360 18167.4,-1359.98 18167.8,-1359.96 18168.2,-1359.94"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="18168.3,-1361.16 18171.8,-1359.75 18168.2,-1358.71 18168.3,-1361.16"/>
<text text-anchor="middle" x="17928" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="17928" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const -->
<g id="node112" class="node"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const</title>
<polygon fill="#0d1375" stroke="#0d1375" points="18163,-1360 17269,-1360 17269,-1297 18163,-1297 18163,-1360"/>
<text text-anchor="middle" x="17716" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="17716" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const</text>
<text text-anchor="middle" x="17716" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.57%</text>
<text text-anchor="middle" x="17716" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(1.03%)</text>
<text text-anchor="middle" x="17716" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">16885×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const -->
<g id="edge119" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M15340,-1430.71C15728.7,-1429.51 16419,-1422.52 17009,-1391 17141.5,-1383.92 17287.6,-1371.92 17412.5,-1360.38"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="17412.8,-1361.58 17416.2,-1360.04 17412.6,-1359.14 17412.8,-1361.58"/>
<text text-anchor="middle" x="17317.5" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1375">1.56%</text>
<text text-anchor="middle" x="17317.5" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1375">16830×</text>
</g>
<!-- std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const -->
<g id="node113" class="node"><title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="2887.5,-1360 2260.5,-1360 2260.5,-1297 2887.5,-1297 2887.5,-1360"/>
<text text-anchor="middle" x="2574" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="2574" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const</text>
<text text-anchor="middle" x="2574" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="2574" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="2574" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const -->
<g id="edge120" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14725.7,-1430.64C12996.5,-1431.27 4515.02,-1432.23 3351,-1391 3197.35,-1385.56 3027.04,-1372.83 2885.12,-1360.36"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="2884.94,-1359.11 2881.35,-1360.03 2884.73,-1361.56 2884.94,-1359.11"/>
<text text-anchor="middle" x="3365" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="3365" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const -->
<g id="node114" class="node"><title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="2251,-1360 1631,-1360 1631,-1297 2251,-1297 2251,-1360"/>
<text text-anchor="middle" x="1941" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1941" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const</text>
<text text-anchor="middle" x="1941" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="1941" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="1941" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const -->
<g id="edge121" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14725.9,-1430.25C12962.9,-1428.69 4164.87,-1419.55 2959,-1391 2646.34,-1383.6 2567.98,-1381.97 2256,-1360 2255.59,-1359.97 2255.18,-1359.94 2254.77,-1359.91"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="2254.63,-1358.68 2251.05,-1359.65 2254.46,-1361.12 2254.63,-1358.68"/>
<text text-anchor="middle" x="2973" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="2973" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const -->
<g id="node115" class="node"><title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="3691,-1360 3295,-1360 3295,-1297 3691,-1297 3691,-1360"/>
<text text-anchor="middle" x="3493" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="3493" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const</text>
<text text-anchor="middle" x="3493" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="3493" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="3493" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const -->
<g id="edge122" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14725.7,-1429.61C13640.9,-1426.32 9889.03,-1413.93 6792,-1391 5415.97,-1380.81 5067.71,-1469.38 3696,-1360 3695.6,-1359.97 3695.2,-1359.94 3694.8,-1359.9"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="3694.77,-1358.67 3691.19,-1359.6 3694.57,-1361.11 3694.77,-1358.67"/>
<text text-anchor="middle" x="6806" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="6806" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const -->
<g id="node116" class="node"><title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="3285.5,-1360 2896.5,-1360 2896.5,-1297 3285.5,-1297 3285.5,-1360"/>
<text text-anchor="middle" x="3091" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="3091" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const</text>
<text text-anchor="middle" x="3091" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="3091" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="3091" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8470×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const -->
<g id="edge123" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const&#45;&gt;std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14725.9,-1430.41C13039.6,-1429.81 4940.13,-1425.16 3826,-1391 3587.49,-1383.69 3527.31,-1384.99 3290,-1360 3289.72,-1359.97 3289.45,-1359.94 3289.17,-1359.91"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="3289.16,-1358.68 3285.55,-1359.52 3288.9,-1361.12 3289.16,-1358.68"/>
<text text-anchor="middle" x="3840" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1074">0.78%</text>
<text text-anchor="middle" x="3840" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1074">8415×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;) -->
<g id="edge157" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M17133.9,-1296.69C17133.1,-1274.08 17132,-1243.36 17131.2,-1219.95"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="17132.4,-1219.71 17131.1,-1216.25 17130,-1219.79 17132.4,-1219.71"/>
<text text-anchor="middle" x="17148" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="17148" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8503×</text>
</g>
<!-- std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;) -->
<g id="edge159" class="edge"><title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator(char const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M17001,-1297.73C17002.4,-1297.48 17003.7,-1297.24 17005,-1297 17021.5,-1294.01 17066.9,-1298.52 17080,-1288 17103.1,-1269.42 17088.4,-1251.36 17102,-1225 17103,-1223.04 17104.1,-1221.06 17105.3,-1219.1"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="17106.4,-1219.65 17107.1,-1216.03 17104.3,-1218.39 17106.4,-1219.65"/>
<text text-anchor="middle" x="17116" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="17116" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8503×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;) -->
<g id="edge166" class="edge"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M18563.2,-1296.86C18517.7,-1273.53 18455.2,-1241.5 18409,-1217.78"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="18409.3,-1216.59 18405.7,-1216.08 18408.2,-1218.77 18409.3,-1216.59"/>
<text text-anchor="middle" x="18556" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="18556" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8470×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;) -->
<g id="edge167" class="edge"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const* const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M17851.5,-1296.95C17956.4,-1273.3 18101.2,-1240.67 18207,-1216.83"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="18207.3,-1218.02 18210.4,-1216.06 18206.7,-1215.63 18207.3,-1218.02"/>
<text text-anchor="middle" x="18176.5" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.54%</text>
<text text-anchor="middle" x="18176.5" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0f73">16885×</text>
</g>
<!-- std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;) -->
<g id="edge169" class="edge"><title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M2520.49,-1296.86C2479.91,-1273.63 2424.25,-1241.76 2382.87,-1218.06"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="2383.06,-1216.76 2379.41,-1216.08 2381.84,-1218.88 2383.06,-1216.76"/>
<text text-anchor="middle" x="2515" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="2515" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8470×</text>
</g>
<!-- std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;) -->
<g id="edge170" class="edge"><title>std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const*, std::vector&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask, std::allocator&lt;std::__cxx11::regex_traits&lt;char&gt;::_RegexMask&gt; &gt; &gt;::__normal_iterator(std::__cxx11::regex_traits&lt;char&gt;::_RegexMask const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M2024.07,-1296.86C2087.7,-1273.39 2175.21,-1241.11 2239.65,-1217.35"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="2240.22,-1218.44 2243.08,-1216.08 2239.38,-1216.14 2240.22,-1218.44"/>
<text text-anchor="middle" x="2227" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="2227" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8470×</text>
</g>
<!-- std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;) -->
<g id="edge172" class="edge"><title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::begin() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M3419.81,-1296.76C3417.26,-1294.07 3414.96,-1291.16 3413,-1288 3400.48,-1267.85 3401,-1240.9 3404.37,-1219.69"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="3405.61,-1219.72 3404.98,-1216.07 3403.19,-1219.31 3405.61,-1219.72"/>
<text text-anchor="middle" x="3427" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="3427" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8470×</text>
</g>
<!-- std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;) -->
<g id="edge173" class="edge"><title>std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt;::end() const&#45;&gt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;char, char&gt; const*, std::vector&lt;std::pair&lt;char, char&gt;, std::allocator&lt;std::pair&lt;char, char&gt; &gt; &gt; &gt;::__normal_iterator(std::pair&lt;char, char&gt; const* const&amp;)</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M3160.47,-1296.86C3213.48,-1273.49 3286.31,-1241.37 3340.13,-1217.63"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="3340.94,-1218.62 3343.65,-1216.08 3339.95,-1216.37 3340.94,-1218.62"/>
<text text-anchor="middle" x="3332" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.27%</text>
<text text-anchor="middle" x="3332" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d0e73">8470×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;) -->
<g id="node117" class="node"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)</title>
<polygon fill="#ec7803" stroke="#ec7803" points="17202.5,-1566 16611.5,-1566 16611.5,-1503 17202.5,-1503 17202.5,-1566"/>
<text text-anchor="middle" x="16907" y="-1554" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="16907" y="-1543" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)</text>
<text text-anchor="middle" x="16907" y="-1532" font-family="Arial" font-size="10.00" fill="#ffffff">87.43%</text>
<text text-anchor="middle" x="16907" y="-1521" font-family="Arial" font-size="10.00" fill="#ffffff">(0.86%)</text>
<text text-anchor="middle" x="16907" y="-1510" font-family="Arial" font-size="10.00" fill="#ffffff">33×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)&#45;&gt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const -->
<g id="edge124" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)&#45;&gt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply(char, std::integral_constant&lt;bool, false&gt;) const</title>
<path fill="none" stroke="#e69804" stroke-width="3.34" d="M16611.4,-1517.57C16267.5,-1499.03 15702.2,-1468.56 15349.6,-1449.56"/>
<polygon fill="#e69804" stroke="#e69804" stroke-width="3.34" points="15349.5,-1446.37 15340.3,-1449.06 15349.2,-1452.73 15349.5,-1446.37"/>
<text text-anchor="middle" x="16155" y="-1486" font-family="Arial" font-size="10.00" fill="#e69804">83.60%</text>
<text text-anchor="middle" x="16155" y="-1475" font-family="Arial" font-size="10.00" fill="#e69804">8448×</text>
</g>
<!-- std::bitset&lt;256ul&gt;::operator[](unsigned long) -->
<g id="node118" class="node"><title>std::bitset&lt;256ul&gt;::operator[](unsigned long)</title>
<polygon fill="#0d1375" stroke="#0d1375" points="18912.5,-1463 18703.5,-1463 18703.5,-1400 18912.5,-1400 18912.5,-1463"/>
<text text-anchor="middle" x="18808" y="-1451" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="18808" y="-1440" font-family="Arial" font-size="10.00" fill="#ffffff">std::bitset&lt;256ul&gt;::operator[](unsigned long)</text>
<text text-anchor="middle" x="18808" y="-1429" font-family="Arial" font-size="10.00" fill="#ffffff">1.60%</text>
<text text-anchor="middle" x="18808" y="-1418" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="18808" y="-1407" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)&#45;&gt;std::bitset&lt;256ul&gt;::operator[](unsigned long) -->
<g id="edge125" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)&#45;&gt;std::bitset&lt;256ul&gt;::operator[](unsigned long)</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M17202.7,-1517.79C17633.7,-1494.89 18414.1,-1453.43 18699.6,-1438.26"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="18699.9,-1439.47 18703.4,-1438.06 18699.8,-1437.02 18699.9,-1439.47"/>
<text text-anchor="middle" x="18042" y="-1486" font-family="Arial" font-size="10.00" fill="#0d1375">1.60%</text>
<text text-anchor="middle" x="18042" y="-1475" font-family="Arial" font-size="10.00" fill="#0d1375">8448×</text>
</g>
<!-- std::bitset&lt;256ul&gt;::reference::operator=(bool) -->
<g id="node119" class="node"><title>std::bitset&lt;256ul&gt;::reference::operator=(bool)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="19458,-1463 19246,-1463 19246,-1400 19458,-1400 19458,-1463"/>
<text text-anchor="middle" x="19352" y="-1451" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="19352" y="-1440" font-family="Arial" font-size="10.00" fill="#ffffff">std::bitset&lt;256ul&gt;::reference::operator=(bool)</text>
<text text-anchor="middle" x="19352" y="-1429" font-family="Arial" font-size="10.00" fill="#ffffff">1.08%</text>
<text text-anchor="middle" x="19352" y="-1418" font-family="Arial" font-size="10.00" fill="#ffffff">(0.59%)</text>
<text text-anchor="middle" x="19352" y="-1407" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)&#45;&gt;std::bitset&lt;256ul&gt;::reference::operator=(bool) -->
<g id="edge126" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)&#45;&gt;std::bitset&lt;256ul&gt;::reference::operator=(bool)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M17202.6,-1526.46C17594.7,-1516.35 18308.1,-1495.32 18917,-1463 19027.7,-1457.12 19154.2,-1447.99 19242.1,-1441.24"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="19242.3,-1442.45 19245.7,-1440.97 19242.1,-1440.01 19242.3,-1442.45"/>
<text text-anchor="middle" x="18714" y="-1486" font-family="Arial" font-size="10.00" fill="#0d1174">1.08%</text>
<text text-anchor="middle" x="18714" y="-1475" font-family="Arial" font-size="10.00" fill="#0d1174">8448×</text>
</g>
<!-- std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long) -->
<g id="node141" class="node"><title>std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="19546,-1360 19202,-1360 19202,-1297 19546,-1297 19546,-1360"/>
<text text-anchor="middle" x="19374" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="19374" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long)</text>
<text text-anchor="middle" x="19374" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.23%</text>
<text text-anchor="middle" x="19374" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.56%)</text>
<text text-anchor="middle" x="19374" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">8448×</text>
</g>
<!-- std::bitset&lt;256ul&gt;::operator[](unsigned long)&#45;&gt;std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long) -->
<g id="edge151" class="edge"><title>std::bitset&lt;256ul&gt;::operator[](unsigned long)&#45;&gt;std::bitset&lt;256ul&gt;::reference::reference(std::bitset&lt;256ul&gt;&amp;, unsigned long)</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M18912.5,-1426.32C18991,-1421.63 19100.7,-1411.73 19195,-1391 19228.1,-1383.72 19263.7,-1372.31 19294.2,-1361.28"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="19294.7,-1362.42 19297.6,-1360.08 19293.9,-1360.12 19294.7,-1362.42"/>
<text text-anchor="middle" x="19284" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1274">1.23%</text>
<text text-anchor="middle" x="19284" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1274">8448×</text>
</g>
<!-- std::bitset&lt;256ul&gt;::reference::operator=(bool)&#45;&gt;std::_Base_bitset&lt;4ul&gt;::_S_maskbit(unsigned long) -->
<g id="edge152" class="edge"><title>std::bitset&lt;256ul&gt;::reference::operator=(bool)&#45;&gt;std::_Base_bitset&lt;4ul&gt;::_S_maskbit(unsigned long)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19450.1,-1399.92C19489.3,-1387.69 19534.5,-1373.6 19574.1,-1361.25"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="19575,-1362.27 19578,-1360.06 19574.3,-1359.93 19575,-1362.27"/>
<text text-anchor="middle" x="19558" y="-1383" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="19558" y="-1372" font-family="Arial" font-size="10.00" fill="#0d0f73">8448×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready() -->
<g id="node120" class="node"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready()</title>
<polygon fill="#ec7703" stroke="#ec7703" points="8171.5,-1669 7758.5,-1669 7758.5,-1606 8171.5,-1606 8171.5,-1669"/>
<text text-anchor="middle" x="7965" y="-1657" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7965" y="-1646" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready()</text>
<text text-anchor="middle" x="7965" y="-1635" font-family="Arial" font-size="10.00" fill="#ffffff">87.54%</text>
<text text-anchor="middle" x="7965" y="-1624" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="7965" y="-1613" font-family="Arial" font-size="10.00" fill="#ffffff">33×</text>
</g>
<!-- std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready()&#45;&gt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;) -->
<g id="edge127" class="edge"><title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready()&#45;&gt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache(std::integral_constant&lt;bool, true&gt;)</title>
<path fill="none" stroke="#ec7803" stroke-width="3.5" d="M8171.52,-1634.17C9347.34,-1620.89 15194.3,-1554.85 16601.8,-1538.95"/>
<polygon fill="#ec7803" stroke="#ec7803" stroke-width="3.5" points="16602,-1542.24 16611.3,-1538.84 16601.9,-1535.66 16602,-1542.24"/>
<text text-anchor="middle" x="13254" y="-1589" font-family="Arial" font-size="10.00" fill="#ec7803">87.43%</text>
<text text-anchor="middle" x="13254" y="-1578" font-family="Arial" font-size="10.00" fill="#ec7803">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction() -->
<g id="node122" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()</title>
<polygon fill="#ef6503" stroke="#ef6503" points="7031,-2431 6675,-2431 6675,-2368 7031,-2368 7031,-2431"/>
<text text-anchor="middle" x="6853" y="-2419" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6853" y="-2408" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()</text>
<text text-anchor="middle" x="6853" y="-2397" font-family="Arial" font-size="10.00" fill="#ffffff">89.59%</text>
<text text-anchor="middle" x="6853" y="-2386" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="6853" y="-2375" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction() -->
<g id="edge128" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()</title>
<path fill="none" stroke="#ef6503" stroke-width="3.58" d="M6731.68,-2470.92C6750.67,-2459.9 6772.26,-2447.37 6791.91,-2435.96"/>
<polygon fill="#ef6503" stroke="#ef6503" stroke-width="3.58" points="6793.65,-2438.79 6800.2,-2431.15 6790.32,-2433.04 6793.65,-2438.79"/>
<text text-anchor="middle" x="6799" y="-2454" font-family="Arial" font-size="10.00" fill="#ef6503">89.59%</text>
<text text-anchor="middle" x="6799" y="-2443" font-family="Arial" font-size="10.00" fill="#ef6503">11×</text>
</g>
<!-- std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept() -->
<g id="node123" class="node"><title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept()</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="6830,-2359 6482,-2359 6482,-2296 6830,-2296 6830,-2359"/>
<text text-anchor="middle" x="6656" y="-2347" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6656" y="-2336" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept()</text>
<text text-anchor="middle" x="6656" y="-2325" font-family="Arial" font-size="10.00" fill="#ffffff">0.51%</text>
<text text-anchor="middle" x="6656" y="-2314" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="6656" y="-2303" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept() -->
<g id="edge129" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept()</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M6674.94,-2470.97C6670.91,-2440.68 6664.75,-2394.33 6660.56,-2362.79"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="6661.73,-2362.32 6660.06,-2359.02 6659.3,-2362.65 6661.73,-2362.32"/>
<text text-anchor="middle" x="6688" y="-2454" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="6688" y="-2443" font-family="Arial" font-size="10.00" fill="#0d0f73">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() -->
<g id="node124" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</title>
<polygon fill="#ef6503" stroke="#ef6503" points="7080.5,-2287 6727.5,-2287 6727.5,-2224 7080.5,-2224 7080.5,-2287"/>
<text text-anchor="middle" x="6904" y="-2275" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6904" y="-2264" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</text>
<text text-anchor="middle" x="6904" y="-2253" font-family="Arial" font-size="10.00" fill="#ffffff">89.59%</text>
<text text-anchor="middle" x="6904" y="-2242" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="6904" y="-2231" font-family="Arial" font-size="10.00" fill="#ffffff">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative() -->
<g id="edge138" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()</title>
<path fill="none" stroke="#ef6503" stroke-width="3.58" d="M6864.07,-2367.69C6871.58,-2346.75 6881.6,-2318.87 6889.72,-2296.26"/>
<polygon fill="#ef6503" stroke="#ef6503" stroke-width="3.58" points="6892.87,-2297.32 6892.96,-2287.25 6886.61,-2295.07 6892.87,-2297.32"/>
<text text-anchor="middle" x="6906" y="-2330.5" font-family="Arial" font-size="10.00" fill="#ef6503">89.59%</text>
<text text-anchor="middle" x="6906" y="-2319.5" font-family="Arial" font-size="10.00" fill="#ef6503">11×</text>
</g>
<!-- std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;) -->
<g id="node132" class="node"><title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="6945.5,-1566 6358.5,-1566 6358.5,-1503 6945.5,-1503 6945.5,-1566"/>
<text text-anchor="middle" x="6652" y="-1554" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6652" y="-1543" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;)</text>
<text text-anchor="middle" x="6652" y="-1532" font-family="Arial" font-size="10.00" fill="#ffffff">1.21%</text>
<text text-anchor="middle" x="6652" y="-1521" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="6652" y="-1510" font-family="Arial" font-size="10.00" fill="#ffffff">187×</text>
</g>
<!-- std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept()&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;) -->
<g id="edge141" class="edge"><title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_accept()&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M6654.43,-2295.8C6653.31,-2271.24 6652,-2235.92 6652,-2205 6652,-2205 6652,-2205 6652,-1636.5 6652,-1614.47 6652,-1589.74 6652,-1570.27"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="6653.23,-1569.94 6652,-1566.44 6650.78,-1569.94 6653.23,-1569.94"/>
<text text-anchor="middle" x="6666" y="-1949.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.50%</text>
<text text-anchor="middle" x="6666" y="-1938.5" font-family="Arial" font-size="10.00" fill="#0d0f73">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2 -->
<g id="node125" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2</title>
<polygon fill="#ef6603" stroke="#ef6603" points="7083.5,-2184 6724.5,-2184 6724.5,-2121 7083.5,-2121 7083.5,-2184"/>
<text text-anchor="middle" x="6904" y="-2172" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6904" y="-2161" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2</text>
<text text-anchor="middle" x="6904" y="-2150" font-family="Arial" font-size="10.00" fill="#ffffff">89.49%</text>
<text text-anchor="middle" x="6904" y="-2139" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="6904" y="-2128" font-family="Arial" font-size="10.00" fill="#ffffff">66×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2 -->
<g id="edge130" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2</title>
<path fill="none" stroke="#ef6703" stroke-width="3.57" d="M6904,-2223.92C6904,-2214.52 6904,-2204.01 6904,-2194.05"/>
<polygon fill="#ef6703" stroke="#ef6703" stroke-width="3.57" points="6907.33,-2193.82 6904,-2184.32 6900.68,-2193.82 6907.33,-2193.82"/>
<text text-anchor="middle" x="6921" y="-2207" font-family="Arial" font-size="10.00" fill="#ef6703">89.32%</text>
<text text-anchor="middle" x="6921" y="-2196" font-family="Arial" font-size="10.00" fill="#ef6703">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() -->
<g id="node126" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</title>
<polygon fill="#0c9b7b" stroke="#0c9b7b" points="7363.5,-2081 7034.5,-2081 7034.5,-2018 7363.5,-2018 7363.5,-2081"/>
<text text-anchor="middle" x="7199" y="-2069" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7199" y="-2058" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</text>
<text text-anchor="middle" x="7199" y="-2047" font-family="Arial" font-size="10.00" fill="#ffffff">30.48%</text>
<text text-anchor="middle" x="7199" y="-2036" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="7199" y="-2025" font-family="Arial" font-size="10.00" fill="#ffffff">44×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() -->
<g id="edge131" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M7050.75,-2223.99C7076.59,-2214.13 7101.92,-2201.13 7123,-2184 7154.92,-2158.06 7175.97,-2114.92 7187.65,-2084.72"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="7188.93,-2084.81 7189.03,-2081.1 7186.64,-2083.94 7188.93,-2084.81"/>
<text text-anchor="middle" x="7185" y="-2155.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.25%</text>
<text text-anchor="middle" x="7185" y="-2144.5" font-family="Arial" font-size="10.00" fill="#0d0e73">11×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2 -->
<g id="edge132" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2</title>
<path fill="none" stroke="#ef6603" stroke-width="3.58" d="M7083.6,-2157.54C7089.28,-2156.18 7092.5,-2154.5 7092.5,-2152.5 7092.5,-2152.25 7092.45,-2152 7092.35,-2151.76"/>
<polygon fill="#ef6603" stroke="#ef6603" stroke-width="3.58" points="7093.6,-2148.67 7083.6,-2147.46 7090.66,-2154.64 7093.6,-2148.67"/>
<text text-anchor="middle" x="7101" y="-2150" font-family="Arial" font-size="10.00" fill="#ef6603">44×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term() -->
<g id="edge133" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()</title>
<path fill="none" stroke="#0c9a7d" stroke-width="1.21" d="M6993.31,-2120.92C7028.47,-2108.89 7068.87,-2095.05 7104.52,-2082.85"/>
<polygon fill="#0c9a7d" stroke="#0c9a7d" stroke-width="1.21" points="7105.16,-2084.66 7109.74,-2081.06 7103.91,-2081.02 7105.16,-2084.66"/>
<text text-anchor="middle" x="7095" y="-2104" font-family="Arial" font-size="10.00" fill="#0c9a7d">30.23%</text>
<text text-anchor="middle" x="7095" y="-2093" font-family="Arial" font-size="10.00" fill="#0c9a7d">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2 -->
<g id="node127" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2</title>
<polygon fill="#4cc308" stroke="#4cc308" points="7025.5,-2081 6690.5,-2081 6690.5,-2018 7025.5,-2018 7025.5,-2081"/>
<text text-anchor="middle" x="6858" y="-2069" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6858" y="-2058" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2</text>
<text text-anchor="middle" x="6858" y="-2047" font-family="Arial" font-size="10.00" fill="#ffffff">59.14%</text>
<text text-anchor="middle" x="6858" y="-2036" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="6858" y="-2025" font-family="Arial" font-size="10.00" fill="#ffffff">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2 -->
<g id="edge134" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2</title>
<path fill="none" stroke="#4cc308" stroke-width="2.37" d="M6890.07,-2120.92C6885.43,-2110.73 6880.21,-2099.25 6875.34,-2088.57"/>
<polygon fill="#4cc308" stroke="#4cc308" stroke-width="2.37" points="6877.68,-2087.21 6872.04,-2081.32 6872.78,-2089.45 6877.68,-2087.21"/>
<text text-anchor="middle" x="6903" y="-2104" font-family="Arial" font-size="10.00" fill="#4cc308">59.14%</text>
<text text-anchor="middle" x="6903" y="-2093" font-family="Arial" font-size="10.00" fill="#4cc308">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() -->
<g id="node128" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()</title>
<polygon fill="#0c9a7d" stroke="#0c9a7d" points="7367.5,-1978 7036.5,-1978 7036.5,-1915 7367.5,-1915 7367.5,-1978"/>
<text text-anchor="middle" x="7202" y="-1966" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7202" y="-1955" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()</text>
<text text-anchor="middle" x="7202" y="-1944" font-family="Arial" font-size="10.00" fill="#ffffff">30.20%</text>
<text text-anchor="middle" x="7202" y="-1933" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="7202" y="-1922" font-family="Arial" font-size="10.00" fill="#ffffff">44×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom() -->
<g id="edge139" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()</title>
<path fill="none" stroke="#0c9a7d" stroke-width="1.21" d="M7199.91,-2017.92C7200.23,-2007.24 7200.58,-1995.15 7200.91,-1984.03"/>
<polygon fill="#0c9a7d" stroke="#0c9a7d" stroke-width="1.21" points="7202.85,-1983.88 7201.08,-1978.32 7199,-1983.76 7202.85,-1983.88"/>
<text text-anchor="middle" x="7218" y="-2001" font-family="Arial" font-size="10.00" fill="#0c9a7d">30.20%</text>
<text text-anchor="middle" x="7218" y="-1990" font-family="Arial" font-size="10.00" fill="#0c9a7d">44×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2 -->
<g id="node130" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2</title>
<polygon fill="#4cc208" stroke="#4cc208" points="7027,-1978 6689,-1978 6689,-1915 7027,-1915 7027,-1978"/>
<text text-anchor="middle" x="6858" y="-1966" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6858" y="-1955" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2</text>
<text text-anchor="middle" x="6858" y="-1944" font-family="Arial" font-size="10.00" fill="#ffffff">59.06%</text>
<text text-anchor="middle" x="6858" y="-1933" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="6858" y="-1922" font-family="Arial" font-size="10.00" fill="#ffffff">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2 -->
<g id="edge140" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2</title>
<path fill="none" stroke="#4cc208" stroke-width="2.36" d="M6858,-2017.92C6858,-2007.93 6858,-1996.7 6858,-1986.19"/>
<polygon fill="#4cc208" stroke="#4cc208" stroke-width="2.36" points="6860.7,-1986.02 6858,-1978.32 6855.31,-1986.02 6860.7,-1986.02"/>
<text text-anchor="middle" x="6875" y="-2001" font-family="Arial" font-size="10.00" fill="#4cc208">59.06%</text>
<text text-anchor="middle" x="6875" y="-1990" font-family="Arial" font-size="10.00" fill="#4cc208">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression() -->
<g id="node129" class="node"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression()</title>
<polygon fill="#ee6c03" stroke="#ee6c03" points="7216,-1875 6822,-1875 6822,-1812 7216,-1812 7216,-1875"/>
<text text-anchor="middle" x="7019" y="-1863" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7019" y="-1852" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression()</text>
<text text-anchor="middle" x="7019" y="-1841" font-family="Arial" font-size="10.00" fill="#ffffff">88.79%</text>
<text text-anchor="middle" x="7019" y="-1830" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="7019" y="-1819" font-family="Arial" font-size="10.00" fill="#ffffff">55×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression() -->
<g id="edge135" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression()</title>
<path fill="none" stroke="#0c9a7f" stroke-width="1.19" d="M7146.6,-1914.92C7125.37,-1903.21 7101.07,-1889.79 7079.4,-1877.83"/>
<polygon fill="#0c9a7f" stroke="#0c9a7f" stroke-width="1.19" points="7080.28,-1876.12 7074.53,-1875.15 7078.42,-1879.49 7080.28,-1876.12"/>
<text text-anchor="middle" x="7144" y="-1898" font-family="Arial" font-size="10.00" fill="#0c9a7f">29.76%</text>
<text text-anchor="middle" x="7144" y="-1887" font-family="Arial" font-size="10.00" fill="#0c9a7f">22×</text>
</g>
<!-- void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool) -->
<g id="node131" class="node"><title>void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)</title>
<polygon fill="#ee6c03" stroke="#ee6c03" points="7272.5,-1772 6765.5,-1772 6765.5,-1709 7272.5,-1709 7272.5,-1772"/>
<text text-anchor="middle" x="7019" y="-1760" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="7019" y="-1749" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)</text>
<text text-anchor="middle" x="7019" y="-1738" font-family="Arial" font-size="10.00" fill="#ffffff">88.76%</text>
<text text-anchor="middle" x="7019" y="-1727" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="7019" y="-1716" font-family="Arial" font-size="10.00" fill="#ffffff">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression()&#45;&gt;void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool) -->
<g id="edge137" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression()&#45;&gt;void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)</title>
<path fill="none" stroke="#ee6c03" stroke-width="3.55" d="M7019,-1811.92C7019,-1802.42 7019,-1791.79 7019,-1781.74"/>
<polygon fill="#ee6c03" stroke="#ee6c03" stroke-width="3.55" points="7022.29,-1781.72 7019,-1772.32 7015.71,-1781.72 7022.29,-1781.72"/>
<text text-anchor="middle" x="7036" y="-1795" font-family="Arial" font-size="10.00" fill="#ee6c03">88.76%</text>
<text text-anchor="middle" x="7036" y="-1784" font-family="Arial" font-size="10.00" fill="#ee6c03">33×</text>
</g>
<!-- std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression() -->
<g id="edge136" class="edge"><title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom()&#39;2&#45;&gt;std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression()</title>
<path fill="none" stroke="#4cc208" stroke-width="2.36" d="M6906.74,-1914.92C6924.63,-1903.7 6945.01,-1890.92 6963.45,-1879.35"/>
<polygon fill="#4cc208" stroke="#4cc208" stroke-width="2.36" points="6965.06,-1881.52 6970.15,-1875.15 6962.19,-1876.96 6965.06,-1881.52"/>
<text text-anchor="middle" x="6970" y="-1898" font-family="Arial" font-size="10.00" fill="#4cc208">59.03%</text>
<text text-anchor="middle" x="6970" y="-1887" font-family="Arial" font-size="10.00" fill="#4cc208">33×</text>
</g>
<!-- void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)&#45;&gt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready() -->
<g id="edge181" class="edge"><title>void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)&#45;&gt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready()</title>
<path fill="none" stroke="#ec7703" stroke-width="3.5" d="M7272.51,-1712.43C7421.11,-1696.57 7606.84,-1676.74 7748.54,-1661.61"/>
<polygon fill="#ec7703" stroke="#ec7703" stroke-width="3.5" points="7749.24,-1664.84 7758.23,-1660.58 7748.54,-1658.3 7749.24,-1664.84"/>
<text text-anchor="middle" x="7594" y="-1692" font-family="Arial" font-size="10.00" fill="#ec7703">87.54%</text>
<text text-anchor="middle" x="7594" y="-1681" font-family="Arial" font-size="10.00" fill="#ec7703">33×</text>
</g>
<!-- std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;) -->
<g id="node133" class="node"><title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="7181.5,-1669 6716.5,-1669 6716.5,-1606 7181.5,-1606 7181.5,-1669"/>
<text text-anchor="middle" x="6949" y="-1657" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="6949" y="-1646" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;)</text>
<text text-anchor="middle" x="6949" y="-1635" font-family="Arial" font-size="10.00" fill="#ffffff">0.59%</text>
<text text-anchor="middle" x="6949" y="-1624" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="6949" y="-1613" font-family="Arial" font-size="10.00" fill="#ffffff">44×</text>
</g>
<!-- void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;) -->
<g id="edge182" class="edge"><title>void std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt;(bool)&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M6997.81,-1708.92C6989.79,-1697.36 6980.63,-1684.14 6972.43,-1672.3"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="6973.36,-1671.5 6970.36,-1669.32 6971.35,-1672.9 6973.36,-1671.5"/>
<text text-anchor="middle" x="7005" y="-1692" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="7005" y="-1681" font-family="Arial" font-size="10.00" fill="#0d0f73">33×</text>
</g>
<!-- std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) -->
<g id="node134" class="node"><title>std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="2961.5,-1463 1994.5,-1463 1994.5,-1400 2961.5,-1400 2961.5,-1463"/>
<text text-anchor="middle" x="2478" y="-1451" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="2478" y="-1440" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</text>
<text text-anchor="middle" x="2478" y="-1429" font-family="Arial" font-size="10.00" fill="#ffffff">1.18%</text>
<text text-anchor="middle" x="2478" y="-1418" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="2478" y="-1407" font-family="Arial" font-size="10.00" fill="#ffffff">187×</text>
</g>
<!-- std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;)&#45;&gt;std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) -->
<g id="edge143" class="edge"><title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;)&#45;&gt;std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M6358.49,-1526.4C5649.89,-1509.25 3839.74,-1465.45 2965.32,-1444.29"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="2965.33,-1443.07 2961.8,-1444.21 2965.27,-1445.52 2965.33,-1443.07"/>
<text text-anchor="middle" x="4953" y="-1486" font-family="Arial" font-size="10.00" fill="#0d1274">1.18%</text>
<text text-anchor="middle" x="4953" y="-1475" font-family="Arial" font-size="10.00" fill="#0d1274">187×</text>
</g>
<!-- std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;)&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;) -->
<g id="edge142" class="edge"><title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher(std::function&lt;bool (char)&gt;)&#45;&gt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M6859.08,-1605.92C6823.11,-1593.69 6781.67,-1579.6 6745.36,-1567.25"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="6745.57,-1566.03 6741.87,-1566.06 6744.79,-1568.35 6745.57,-1566.03"/>
<text text-anchor="middle" x="6842" y="-1589" font-family="Arial" font-size="10.00" fill="#0d0f73">0.47%</text>
<text text-anchor="middle" x="6842" y="-1578" font-family="Arial" font-size="10.00" fill="#0d0f73">44×</text>
</g>
<!-- void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) -->
<g id="node149" class="node"><title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="1622,-1360 358,-1360 358,-1297 1622,-1297 1622,-1360"/>
<text text-anchor="middle" x="990" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="990" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</text>
<text text-anchor="middle" x="990" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.16%</text>
<text text-anchor="middle" x="990" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="990" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">187×</text>
</g>
<!-- std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)&#45;&gt;void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) -->
<g id="edge171" class="edge"><title>std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::push_back(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)&#45;&gt;void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M2028.52,-1399.99C1843.2,-1387.41 1628.79,-1372.86 1443.09,-1360.25"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="1443.11,-1359.03 1439.54,-1360.01 1442.94,-1361.47 1443.11,-1359.03"/>
<text text-anchor="middle" x="1882" y="-1383" font-family="Arial" font-size="10.00" fill="#0d1274">1.16%</text>
<text text-anchor="middle" x="1882" y="-1372" font-family="Arial" font-size="10.00" fill="#0d1274">187×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) -->
<g id="node135" class="node"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="2139,-763 375,-763 375,-700 2139,-700 2139,-763"/>
<text text-anchor="middle" x="1257" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1257" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)</text>
<text text-anchor="middle" x="1257" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">0.58%</text>
<text text-anchor="middle" x="1257" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="1257" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">66×</text>
</g>
<!-- void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;) -->
<g id="node136" class="node"><title>void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="1577.5,-619 440.5,-619 440.5,-556 1577.5,-556 1577.5,-619"/>
<text text-anchor="middle" x="1009" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1009" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;)</text>
<text text-anchor="middle" x="1009" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">0.55%</text>
<text text-anchor="middle" x="1009" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="1009" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">341×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)&#45;&gt;void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;) -->
<g id="edge144" class="edge"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)&#45;&gt;void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M1203.49,-699.863C1162.91,-676.627 1107.25,-644.756 1065.87,-621.061"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="1066.06,-619.758 1062.41,-619.082 1064.84,-621.884 1066.06,-619.758"/>
<text text-anchor="middle" x="1198" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.55%</text>
<text text-anchor="middle" x="1198" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d0f73">341×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;) -->
<g id="node140" class="node"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="1121,-516 537,-516 537,-453 1121,-453 1121,-516"/>
<text text-anchor="middle" x="829" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="829" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="829" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">0.51%</text>
<text text-anchor="middle" x="829" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="829" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">341×</text>
</g>
<!-- void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;) -->
<g id="edge176" class="edge"><title>void std::_Construct&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_State(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M954.506,-555.923C933.104,-543.914 908.513,-530.116 886.801,-517.933"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="887.271,-516.792 883.62,-516.148 886.072,-518.929 887.271,-516.792"/>
<text text-anchor="middle" x="950" y="-539" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="950" y="-528" font-family="Arial" font-size="10.00" fill="#0d0f73">341×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) -->
<g id="node137" class="node"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="2637.5,-969 374.5,-969 374.5,-906 2637.5,-906 2637.5,-969"/>
<text text-anchor="middle" x="1506" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1506" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)</text>
<text text-anchor="middle" x="1506" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">0.58%</text>
<text text-anchor="middle" x="1506" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="1506" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">66×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) -->
<g id="node138" class="node"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="2134.5,-866 479.5,-866 479.5,-803 2134.5,-803 2134.5,-866"/>
<text text-anchor="middle" x="1307" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1307" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)</text>
<text text-anchor="middle" x="1307" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.58%</text>
<text text-anchor="middle" x="1307" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="1307" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">66×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) -->
<g id="edge145" class="edge"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M1445.75,-905.923C1422,-893.865 1394.68,-880.002 1370.61,-867.783"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="1371.06,-866.639 1367.38,-866.148 1369.95,-868.824 1371.06,-866.639"/>
<text text-anchor="middle" x="1439" y="-889" font-family="Arial" font-size="10.00" fill="#0d0f73">0.58%</text>
<text text-anchor="middle" x="1439" y="-878" font-family="Arial" font-size="10.00" fill="#0d0f73">66×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*) -->
<g id="edge147" class="edge"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::uninitialized_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*&gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M1291.86,-802.923C1286.19,-791.459 1279.71,-778.365 1273.88,-766.602"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="1274.91,-765.915 1272.26,-763.322 1272.71,-767.002 1274.91,-765.915"/>
<text text-anchor="middle" x="1301" y="-786" font-family="Arial" font-size="10.00" fill="#0d0f73">0.58%</text>
<text text-anchor="middle" x="1301" y="-775" font-family="Arial" font-size="10.00" fill="#0d0f73">66×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) -->
<g id="node139" class="node"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="2748,-1072 358,-1072 358,-1009 2748,-1009 2748,-1072"/>
<text text-anchor="middle" x="1553" y="-1060" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1553" y="-1049" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)</text>
<text text-anchor="middle" x="1553" y="-1038" font-family="Arial" font-size="10.00" fill="#ffffff">0.59%</text>
<text text-anchor="middle" x="1553" y="-1027" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="1553" y="-1016" font-family="Arial" font-size="10.00" fill="#ffffff">66×</text>
</g>
<!-- std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) -->
<g id="edge146" class="edge"><title>std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_copy_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M1538.77,-1008.92C1533.44,-997.459 1527.34,-984.365 1521.87,-972.602"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="1522.93,-971.978 1520.34,-969.322 1520.71,-973.012 1522.93,-971.978"/>
<text text-anchor="middle" x="1548" y="-992" font-family="Arial" font-size="10.00" fill="#0d0f73">0.58%</text>
<text text-anchor="middle" x="1548" y="-981" font-family="Arial" font-size="10.00" fill="#0d0f73">66×</text>
</g>
<!-- std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;) -->
<g id="edge155" class="edge"><title>std::iterator_traits&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;::difference_type std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;, std::random_access_iterator_tag)&#45;&gt;__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;::difference_type __gnu_cxx::operator&#45;&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M15809.1,-905.991C15858.2,-893.628 15914.9,-879.359 15964.3,-866.906"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="15964.8,-868.056 15967.9,-866.013 15964.2,-865.68 15964.8,-868.056"/>
<text text-anchor="middle" x="15939" y="-889" font-family="Arial" font-size="10.00" fill="#0d1074">0.81%</text>
<text text-anchor="middle" x="15939" y="-878" font-family="Arial" font-size="10.00" fill="#0d1074">8448×</text>
</g>
<!-- void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag) -->
<g id="node152" class="node"><title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</title>
<polygon fill="#0d4482" stroke="#0d4482" points="12762,-969 12264,-969 12264,-906 12762,-906 12762,-969"/>
<text text-anchor="middle" x="12513" y="-957" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="12513" y="-946" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</text>
<text text-anchor="middle" x="12513" y="-935" font-family="Arial" font-size="10.00" fill="#ffffff">11.82%</text>
<text text-anchor="middle" x="12513" y="-924" font-family="Arial" font-size="10.00" fill="#ffffff">(1.03%)</text>
<text text-anchor="middle" x="12513" y="-913" font-family="Arial" font-size="10.00" fill="#ffffff">8415×</text>
</g>
<!-- void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type)&#45;&gt;void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag) -->
<g id="edge184" class="edge"><title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_initialize_dispatch&lt;char*&gt;(char*, char*, std::__false_type)&#45;&gt;void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</title>
<path fill="none" stroke="#0d4482" stroke-width="0.5" d="M12406.3,-1008.92C12424.4,-997.012 12445.1,-983.342 12463.4,-971.233"/>
<polygon fill="#0d4482" stroke="#0d4482" stroke-width="0.5" points="12464.3,-972.098 12466.6,-969.148 12463,-970.054 12464.3,-972.098"/>
<text text-anchor="middle" x="12468" y="-992" font-family="Arial" font-size="10.00" fill="#0d4482">11.82%</text>
<text text-anchor="middle" x="12468" y="-981" font-family="Arial" font-size="10.00" fill="#0d4482">8415×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) -->
<g id="node147" class="node"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="19797,-2843 11971,-2843 11971,-2780 19797,-2780 19797,-2843"/>
<text text-anchor="middle" x="15884" y="-2831" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15884" y="-2820" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="15884" y="-2809" font-family="Arial" font-size="10.00" fill="#ffffff">0.61%</text>
<text text-anchor="middle" x="15884" y="-2798" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15884" y="-2787" font-family="Arial" font-size="10.00" fill="#ffffff">17×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;)&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) -->
<g id="edge164" class="edge"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp; boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt;(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;)&#45;&gt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M15884,-2882.92C15884,-2871.56 15884,-2858.59 15884,-2846.9"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="15885.2,-2846.82 15884,-2843.32 15882.8,-2846.82 15885.2,-2846.82"/>
<text text-anchor="middle" x="15898" y="-2866" font-family="Arial" font-size="10.00" fill="#0d0f74">0.61%</text>
<text text-anchor="middle" x="15898" y="-2855" font-family="Arial" font-size="10.00" fill="#0d0f74">17×</text>
</g>
<!-- void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_initialize_dispatch&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::__false_type) -->
<g id="node148" class="node"><title>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_initialize_dispatch&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::__false_type)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="19721.5,-2740 12198.5,-2740 12198.5,-2677 19721.5,-2677 19721.5,-2740"/>
<text text-anchor="middle" x="15960" y="-2728" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="15960" y="-2717" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_initialize_dispatch&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::__false_type)</text>
<text text-anchor="middle" x="15960" y="-2706" font-family="Arial" font-size="10.00" fill="#ffffff">0.55%</text>
<text text-anchor="middle" x="15960" y="-2695" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15960" y="-2684" font-family="Arial" font-size="10.00" fill="#ffffff">17×</text>
</g>
<!-- std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)&#45;&gt;void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_initialize_dispatch&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::__false_type) -->
<g id="edge168" class="edge"><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, void&gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)&#45;&gt;void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_initialize_dispatch&lt;boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt; &gt;(boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, boost::iterators::transform_iterator&lt;boost::algorithm::detail::copy_iterator_rangeF&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::algorithm::split_iterator&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, boost::iterators::use_default, boost::iterators::use_default&gt;, std::__false_type)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M15907,-2779.92C15915.7,-2768.36 15925.7,-2755.14 15934.6,-2743.3"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="15935.7,-2743.86 15936.8,-2740.32 15933.7,-2742.38 15935.7,-2743.86"/>
<text text-anchor="middle" x="15943" y="-2763" font-family="Arial" font-size="10.00" fill="#0d0f73">0.55%</text>
<text text-anchor="middle" x="15943" y="-2752" font-family="Arial" font-size="10.00" fill="#0d0f73">17×</text>
</g>
<!-- void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) -->
<g id="node153" class="node"><title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="1662,-1216 358,-1216 358,-1153 1662,-1153 1662,-1216"/>
<text text-anchor="middle" x="1010" y="-1204" font-family="Arial" font-size="10.00" fill="#ffffff">parser</text>
<text text-anchor="middle" x="1010" y="-1193" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</text>
<text text-anchor="middle" x="1010" y="-1182" font-family="Arial" font-size="10.00" fill="#ffffff">1.03%</text>
<text text-anchor="middle" x="1010" y="-1171" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="1010" y="-1160" font-family="Arial" font-size="10.00" fill="#ffffff">66×</text>
</g>
<!-- void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)&#45;&gt;void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;) -->
<g id="edge189" class="edge"><title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)&#45;&gt;void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M994.34,-1296.69C997.524,-1274.08 1001.85,-1243.36 1005.15,-1219.95"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="1006.39,-1219.89 1005.67,-1216.25 1003.97,-1219.55 1006.39,-1219.89"/>
<text text-anchor="middle" x="1019" y="-1259.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.03%</text>
<text text-anchor="middle" x="1019" y="-1248.5" font-family="Arial" font-size="10.00" fill="#0d1174">66×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) -->
<g id="edge180" class="edge"><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt;(char*, char*, std::__false_type)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M17650.8,-802.991C17759.9,-790.467 17886.1,-775.988 17995.6,-763.422"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="17995.8,-764.629 17999.1,-763.013 17995.5,-762.195 17995.8,-764.629"/>
<text text-anchor="middle" x="17918" y="-786" font-family="Arial" font-size="10.00" fill="#0d1876">2.74%</text>
<text text-anchor="middle" x="17918" y="-775" font-family="Arial" font-size="10.00" fill="#0d1876">8415×</text>
</g>
<!-- void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;) -->
<g id="edge185" class="edge"><title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;char* std::__uninitialized_copy_a&lt;char*, char*, char&gt;(char*, char*, char*, std::allocator&lt;char&gt;&amp;)</title>
<path fill="none" stroke="#0d257a" stroke-width="0.5" d="M12263.7,-913.984C12224,-910.935 12183.4,-908.129 12145,-906 11298.3,-859.072 10289.3,-842.768 9852.08,-837.634"/>
<polygon fill="#0d257a" stroke="#0d257a" stroke-width="0.5" points="9852.07,-836.409 9848.56,-837.593 9852.05,-838.859 9852.07,-836.409"/>
<text text-anchor="middle" x="11956" y="-889" font-family="Arial" font-size="10.00" fill="#0d257a">5.50%</text>
<text text-anchor="middle" x="11956" y="-878" font-family="Arial" font-size="10.00" fill="#0d257a">8415×</text>
</g>
<!-- void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long) -->
<g id="edge186" class="edge"><title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;std::_Vector_base&lt;char, std::allocator&lt;char&gt; &gt;::_M_allocate(unsigned long)</title>
<path fill="none" stroke="#0d1f78" stroke-width="0.5" d="M12721.7,-905.991C12819.2,-891.743 12934,-874.964 13027.1,-861.351"/>
<polygon fill="#0d1f78" stroke="#0d1f78" stroke-width="0.5" points="13027.4,-862.546 13030.7,-860.827 13027.1,-860.122 13027.4,-862.546"/>
<text text-anchor="middle" x="12935" y="-889" font-family="Arial" font-size="10.00" fill="#0d1f78">4.14%</text>
<text text-anchor="middle" x="12935" y="-878" font-family="Arial" font-size="10.00" fill="#0d1f78">8415×</text>
</g>
<!-- void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*) -->
<g id="edge187" class="edge"><title>void std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char*&gt;(char*, char*, std::forward_iterator_tag)&#45;&gt;std::iterator_traits&lt;char*&gt;::difference_type std::distance&lt;char*&gt;(char*, char*)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M12624.2,-905.964C12727.9,-877.881 12886.9,-835.757 13026,-803 13327.6,-731.966 13682.1,-659.634 13882.6,-619.761"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="13883,-620.944 13886.2,-619.059 13882.5,-618.541 13883,-620.944"/>
<text text-anchor="middle" x="13167" y="-786" font-family="Arial" font-size="10.00" fill="#0d1174">1.00%</text>
<text text-anchor="middle" x="13167" y="-775" font-family="Arial" font-size="10.00" fill="#0d1174">8415×</text>
</g>
<!-- void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;) -->
<g id="edge188" class="edge"><title>void std::vector&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_emplace_back_aux&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;&amp;&amp;)&#45;&gt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;* std::__uninitialized_move_if_noexcept_a&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;(std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;*, std::allocator&lt;std::__detail::_State&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;&amp;)</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M1126.82,-1152.95C1216.99,-1129.37 1341.31,-1096.86 1432.42,-1073.03"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="1432.84,-1074.19 1435.91,-1072.12 1432.22,-1071.82 1432.84,-1074.19"/>
<text text-anchor="middle" x="1407" y="-1115.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="1407" y="-1104.5" font-family="Arial" font-size="10.00" fill="#0d0f74">66×</text>
</g>
</g>
</svg>
